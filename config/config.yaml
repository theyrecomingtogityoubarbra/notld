#config_version=6

hardware:
  platform: lisy
lisy:
  connection: serial
  port: com3
  baud: 115200

segment_displays:
  info_display:    { number: 0, size: 4, update_method: replace }
  player1_display: { number: 1, size: 7, update_method: stack }
  player2_display: { number: 2, size: 7, update_method: stack }
  player3_display: { number: 3, size: 7, update_method: stack }
  player4_display: { number: 4, size: 7, update_method: stack }


# Free Play: no {credits} anywhere in segment_display_player
segment_display_player:
  # Light player score windows at game start
  game_started:
    info_display: { text: "    "}
    player1_display: { text: " " }
    player2_display: { text: " " }
    player3_display: { text: " " }
    player4_display: { text: " " }

  # Show "0" the moment a player is added
  "player_added{num==1}":
    player1_display: { text: "0" }
  "player_added{num==2}":
    player2_display: { text: "0" }
  "player_added{num==3}":
    player3_display: { text: "0" }
  "player_added{num==4}":
    player4_display: { text: "0" }

  "ball_started{current_player.number==1}":
    player1_display: { text: "{players[0].score:d}" }
  "ball_started{current_player.number==2}":
    player2_display: { text: "{players[1].score:d}" }
  "ball_started{current_player.number==3}":
    player3_display: { text: "{players[2].score:d}" }
  "ball_started{current_player.number==4}":
    player4_display: { text: "{players[3].score:d}" }

  # turn mask ON (priority higher than your normal score text)
  "blink_on{current_player.number==1}":
    player1_display: { text: "       ", key: upmask, priority: 2000 }
  "blink_on{current_player.number==2}":
    player2_display: { text: "       ", key: upmask, priority: 2000 }
  "blink_on{current_player.number==3}":
    player3_display: { text: "       ", key: upmask, priority: 2000 }
  "blink_on{current_player.number==4}":
    player4_display: { text: "       ", key: upmask, priority: 2000 }

  # turn mask OFF (remove only our overlay)
  "blink_off{current_player.number==1}":
    player1_display: { action: remove, key: upmask }
  "blink_off{current_player.number==2}":
    player2_display: { action: remove, key: upmask }
  "blink_off{current_player.number==3}":
    player3_display: { action: remove, key: upmask }
  "blink_off{current_player.number==4}":
    player4_display: { action: remove, key: upmask }

  # safety: clear any leftover mask at the start of each ball
  ball_started:
    player1_display: { action: remove, key: upmask }
    player2_display: { action: remove, key: upmask }
    player3_display: { action: remove, key: upmask }
    player4_display: { action: remove, key: upmask }
    
  # Score updates
  "player_score{current_player.number==1}":
    player1_display: { text: "{players[0].score:d}" }
  "player_score{current_player.number==2}":
    player2_display: { text: "{players[1].score:d}" }
  "player_score{current_player.number==3}":
    player3_display: { text: "{players[2].score:d}" }
  "player_score{current_player.number==4}":
    player4_display: { text: "{players[3].score:d}" }

  # Back to blank at game end
  game_ended:
    player1_display: { text: "{machine.player1_score:d}" }
    player2_display: { text: "{machine.player2_score:d}" }
    player3_display: { text: "{machine.player3_score:d}" }
    player4_display: { text: "{machine.player4_score:d}" }

config:
  - config_ball_devices.yaml
  - config_coils.yaml
  - config_switches.yaml
  - config_lights.yaml
  - config_sounds.yaml

game:
  balls_per_game: 3
  max_players: 4

modes:
  - attract
  - base
  - escape_graveyard

playfields:
  playfield:
    default_source_device: bd_trough
    tags: default

digital_outputs:
  flipper_enabling_relay:
    type: driver
    number: 16
    enable_events: ball_started
    disable_events: ball_will_end

autofire_coils:
  ac_left_sling:
    coil: c_left_sling
    switch: s_left_sling
  ac_right_sling:
    coil: c_right_sling
    switch: s_right_sling
  ac_upper_left_sling:
    coil: c_upper_left_sling
    switch: s_left_upper_bumper
  ac_left_pop_bumper:
    coil: c_left_pop_bumper
    switch: s_left_pop_bumper
  ac_right_pop_bumper:
    coil: c_right_pop_bumper
    switch: s_right_pop_bumper
  ac_middle_pop_bumper:
    coil: c_middle_pop_bumper
    switch: s_middle_pop_bumper

sound_system:
  tracks:
    music:
      volume: 1.0
      simultaneous_sounds: 1
    voice:
      volume: 1.0
      simultaneous_sounds: 1
      ducking:
        target: music
        attenuation: 0.4    # reduce music while voice plays
        attack: 0ms
        release: 300ms
    sfx:
      volume: 1.0
      simultaneous_sounds: 4


light_player:
  # clear all count lamps when a new game starts
  # clear BEFORE any players are added
  game_starting:
    l_player_1: off
    l_player_2: off
    l_player_3: off
    l_player_4: off

  # cumulative player-count lamps using the player number from the event
  "player_added{num==1}":
    l_player_1: on
  "player_added{player_num==1}":        # fallback for images that use player_num
    l_player_1: on

  "player_added{num==2}":
    l_player_1: on
    l_player_2: on
  "player_added{player_num==2}":
    l_player_1: on
    l_player_2: on

  "player_added{num==3}":
    l_player_1: on
    l_player_2: on
    l_player_3: on
  "player_added{player_num==3}":
    l_player_1: on
    l_player_2: on
    l_player_3: on

  "player_added{num==4}":
    l_player_1: on
    l_player_2: on
    l_player_3: on
    l_player_4: on
  "player_added{player_num==4}":
    l_player_1: on
    l_player_2: on
    l_player_3: on
    l_player_4: on

  # turn all UP lamps off first on each ball start
  ball_started:
    l_1up: off
    l_2up: off
    l_3up: off
    l_4up: off

  # then turn on the current player's UP lamp (no suffix needed)
  "ball_started{current_player.number==1}":
    l_1up: on
  "ball_started{current_player.number==2}":
    l_2up: on
  "ball_started{current_player.number==3}":
    l_3up: on
  "ball_started{current_player.number==4}":
    l_4up: on

  # single merged game_ended cleanup
  game_ended:
    l_player_1: off
    l_player_2: off
    l_player_3: off
    l_player_4: off
    l_1up: off
    l_2up: off
    l_3up: off
    l_4up: off

show_player:
  game_started:
    blink_slow:
      action: play
      loops: -1
  game_ended:
    blink_slow:
      action: stop
