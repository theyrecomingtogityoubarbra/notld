2025-10-25 20:25:50,654 : INFO : root : Loading config.
2025-10-25 20:25:50,660 : INFO : YamlMultifileConfigLoader : Machine config file #1: config.yaml
2025-10-25 20:25:50,660 : INFO : ConfigProcessor : Loading config from cache: C:\Users\antho\AppData\Local\Temp\fdca14d0c9d658ab8200d57120800af5.mpf_cache
2025-10-25 20:25:50,804 : INFO : ConfigProcessor : Loading config from cache: C:\Users\antho\AppData\Local\Temp\5dec96b1547c4adf5bdd3d1715e74bc0.mpf_cache
2025-10-25 20:25:50,804 : INFO : ConfigProcessor : Loading config from cache: C:\Users\antho\AppData\Local\Temp\202a5840610e95051f9f473dfa660cc0.mpf_cache
2025-10-25 20:25:50,806 : INFO : ConfigProcessor : Loading config from cache: C:\Users\antho\AppData\Local\Temp\5dec96b1547c4adf5bdd3d1715e74bc0.mpf_cache
2025-10-25 20:25:50,806 : INFO : ConfigProcessor : Loading config from cache: C:\Users\antho\AppData\Local\Temp\2cd13a2d3f375e00ab01d6d09a85d8e7.mpf_cache
2025-10-25 20:25:50,807 : INFO : ConfigProcessor : Loading config from cache: C:\Users\antho\AppData\Local\Temp\9220b44b97b91972524500b81035d790.mpf_cache
2025-10-25 20:25:50,808 : INFO : ConfigProcessor : Loading config from cache: C:\Users\antho\AppData\Local\Temp\31ee881584fa6fce665a672a4f3f633a.mpf_cache
2025-10-25 20:25:50,808 : INFO : ConfigProcessor : Loading config from cache: C:\Users\antho\AppData\Local\Temp\5e841763ec73085bbf92358fe6afda21.mpf_cache
2025-10-25 20:25:50,809 : INFO : ConfigProcessor : Loading config from cache: C:\Users\antho\AppData\Local\Temp\b17152efa55a24f0424602723f8d3921.mpf_cache
2025-10-25 20:25:50,809 : INFO : ConfigProcessor : Loading config from cache: C:\Users\antho\AppData\Local\Temp\e87fc0e7d2f8a851b5fa3f604e0d0c6e.mpf_cache
2025-10-25 20:25:50,810 : INFO : ConfigProcessor : Loading config from cache: C:\Users\antho\AppData\Local\Temp\196ac76b6cab3a9880804c826cfbcb5c.mpf_cache
2025-10-25 20:25:50,810 : INFO : ConfigProcessor : Loading config from cache: C:\Users\antho\AppData\Local\Temp\834292dd7853e12a66732dc89828c828.mpf_cache
2025-10-25 20:25:50,811 : INFO : ConfigProcessor : Loading config from cache: C:\Users\antho\AppData\Local\Temp\ae2be9c5579852c305357e207df97e8b.mpf_cache
2025-10-25 20:25:50,812 : INFO : ConfigProcessor : Loading config from cache: C:\Users\antho\AppData\Local\Temp\46f8fa3e41dfeeb8232af2f03a13b6c4.mpf_cache
2025-10-25 20:25:50,812 : INFO : ConfigProcessor : Loading config from cache: C:\Users\antho\AppData\Local\Temp\c67e9c175da6c060302945929b27b878.mpf_cache
2025-10-25 20:25:50,813 : INFO : ConfigProcessor : Loading config from cache: C:\Users\antho\AppData\Local\Temp\1c965aadbb61a7e709e8884fad17ac0b.mpf_cache
2025-10-25 20:25:50,813 : INFO : ConfigProcessor : Loading config from cache: C:\Users\antho\AppData\Local\Temp\60ca9d662df3e70e96f6d7ec0f4491aa.mpf_cache
2025-10-25 20:25:50,814 : INFO : Machine : Mission Pinball Framework Core Engine v0.80.0.dev11
2025-10-25 20:25:50,814 : INFO : Machine : Command line arguments: {'no_load_cache': False, 'create_config_cache': True, 'bcp': True, 'configfile': ['config.yaml'], 'force_assets_load': False, 'platform_integration_test': False, 'jsonlogging': False, 'logfile': 'logs\\2025-10-25-20-25-50-mpf-LAPTOP-MPGP6R69.log', 'pause': False, 'production': False, 'text_ui': True, 'loglevel': 15, 'consoleloglevel': 20, 'force_platform': None, 'syslog_address': None, 'full_logfile_path': 'C:\\Users\\antho\\nightpin\\logs\\2025-10-25-20-25-50-mpf-LAPTOP-MPGP6R69.log'}
2025-10-25 20:25:50,814 : INFO : Machine : MPF path: C:\Users\antho\mpf\Lib\site-packages\mpf
2025-10-25 20:25:50,814 : INFO : Machine : Machine path: C:\Users\antho\nightpin
2025-10-25 20:25:50,814 : INFO : Machine : Platform: win32
2025-10-25 20:25:50,814 : INFO : Machine : Python executable location: C:\Users\antho\mpf\Scripts\python.exe
2025-10-25 20:25:50,814 : INFO : Machine : Python version: 3.12.7 (64-bit)
2025-10-25 20:25:50,817 : INFO : Machine : Initializing MPF...
2025-10-25 20:25:51,070 : INFO : lisy : Connecting to com3 at 115200bps
2025-10-25 20:25:51,071 : WARNING : lisy : Could not import terminos (this is ok on windows).
2025-10-25 20:25:51,227 : INFO : EventManager : Event: ======'machine_var_lisy_hardware'====== Args={'value': 'LISY35', 'prev_value': None, 'change': True}
2025-10-25 20:25:51,227 : INFO : EventManager : Event: ======'machine_var_lisy_version'====== Args={'value': '5.26 ', 'prev_value': None, 'change': True}
2025-10-25 20:25:51,227 : INFO : EventManager : Event: ======'machine_var_lisy_api_version'====== Args={'value': b'0.09', 'prev_value': None, 'change': True}
2025-10-25 20:25:52,554 : INFO : EventManager : Event: ======'machine_var_credits_string'====== Args={'value': 'FREE PLAY', 'prev_value': None, 'change': True}
2025-10-25 20:25:52,586 : INFO : EventManager : Event: ======'machine_var_master_volume'====== Args={'value': 0.5, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,586 : INFO : EventManager : Event: ======'machine_var_player1_score'====== Args={'value': 300, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,586 : INFO : EventManager : Event: ======'machine_var_player2_score'====== Args={'value': 5110, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,586 : INFO : EventManager : Event: ======'machine_var_mpf_version'====== Args={'value': 'Mission Pinball Framework v0.80.0.dev11', 'prev_value': None, 'change': True}
2025-10-25 20:25:52,586 : INFO : EventManager : Event: ======'machine_var_mpf_extended_version'====== Args={'value': 'Mission Pinball Framework v0.80.0.dev11, Config version:6, Show version: 6, BCP version:1.1', 'prev_value': None, 'change': True}
2025-10-25 20:25:52,586 : INFO : EventManager : Event: ======'machine_var_python_version'====== Args={'value': '3.12.7', 'prev_value': None, 'change': True}
2025-10-25 20:25:52,678 : INFO : EventManager : Event: ======'machine_var_platform'====== Args={'value': 'Windows-11-10.0.26100-SP0', 'prev_value': None, 'change': True}
2025-10-25 20:25:52,678 : INFO : EventManager : Event: ======'machine_var_platform_system'====== Args={'value': 'Windows', 'prev_value': None, 'change': True}
2025-10-25 20:25:52,678 : INFO : EventManager : Event: ======'machine_var_platform_release'====== Args={'value': '11', 'prev_value': None, 'change': True}
2025-10-25 20:25:52,679 : INFO : EventManager : Event: ======'machine_var_platform_version'====== Args={'value': '10.0.26100', 'prev_value': None, 'change': True}
2025-10-25 20:25:52,679 : INFO : EventManager : Event: ======'machine_var_platform_machine'====== Args={'value': 'AMD64', 'prev_value': None, 'change': True}
2025-10-25 20:25:52,679 : INFO : EventManager : Event: ======'machine_var_log_file_path'====== Args={'value': 'C:\\Users\\antho\\nightpin\\logs\\2025-10-25-20-25-50-mpf-LAPTOP-MPGP6R69.log', 'prev_value': None, 'change': True}
2025-10-25 20:25:52,679 : INFO : EventManager : Event: ======'init_phase_1'====== Args={}
2025-10-25 20:25:52,710 : INFO : EventManager : Event: ======'drop_target_bank_right_bank_up'====== Args={}
2025-10-25 20:25:52,711 : INFO : EventManager : Event: ======'drop_target_bank_left_bank_up'====== Args={}
2025-10-25 20:25:52,791 : INFO : EventManager : Event: ======'init_phase_2'====== Args={}
2025-10-25 20:25:52,791 : INFO : SwitchController : Found active switch: ('8', <mpf.platforms.lisy.lisy.LisyHardwarePlatform object at 0x00000224459B96D0>) <switch.s_trough>
2025-10-25 20:25:52,799 : INFO : EventManager : Event: ======'bcp_connection_attempt'====== Args={'name': 'local_display', 'host': 'localhost', 'port': 5050}
2025-10-25 20:25:52,802 : INFO : BCPClientSocket : Connecting BCP to 'local_display' at localhost:5050...
2025-10-25 20:25:52,818 : INFO : BCPClientSocket : Connected BCP to 'local_display' localhost:5050
2025-10-25 20:25:52,819 : INFO : EventManager : Event: ======'bcp_clients_connected'====== Args={}
2025-10-25 20:25:52,912 : INFO : ball_device.bd_trough : BCH: Initial count: 1
2025-10-25 20:25:52,912 : INFO : ball_device.bd_trough : State: idle
2025-10-25 20:25:52,941 : INFO : ball_device.bd_saucer : BCH: Initial count: 0
2025-10-25 20:25:52,941 : INFO : ball_device.bd_saucer : State: idle
2025-10-25 20:25:52,952 : INFO : EventManager : Event: ======'init_phase_3'====== Args={}
2025-10-25 20:25:52,958 : INFO : EventManager : Event: ======'init_phase_4'====== Args={}
2025-10-25 20:25:52,959 : INFO : BallController : Initial balls found: 1
2025-10-25 20:25:52,960 : INFO : EventManager : Event: ======'machine_var_audits_events_game_ended'====== Args={'value': 5, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,960 : INFO : EventManager : Event: ======'machine_var_audits_events_game_started'====== Args={'value': 28, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,960 : INFO : EventManager : Event: ======'machine_var_audits_missing_switches_s_coin_right'====== Args={'value': 27, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,960 : INFO : EventManager : Event: ======'machine_var_audits_missing_switches_s_left_bank_target_left'====== Args={'value': 5, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,960 : INFO : EventManager : Event: ======'machine_var_audits_missing_switches_s_left_bank_target_middle'====== Args={'value': 5, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,960 : INFO : EventManager : Event: ======'machine_var_audits_missing_switches_s_left_bank_target_right'====== Args={'value': 6, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,960 : INFO : EventManager : Event: ======'machine_var_audits_missing_switches_s_left_lower_bumper'====== Args={'value': 5, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,960 : INFO : EventManager : Event: ======'machine_var_audits_missing_switches_s_left_outlane_rollover'====== Args={'value': 6, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,960 : INFO : EventManager : Event: ======'machine_var_audits_missing_switches_s_left_pop_bumper'====== Args={'value': 5, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,961 : INFO : EventManager : Event: ======'machine_var_audits_missing_switches_s_left_sling'====== Args={'value': 5, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,961 : INFO : EventManager : Event: ======'machine_var_audits_missing_switches_s_left_upper_bumper'====== Args={'value': 5, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,961 : INFO : EventManager : Event: ======'machine_var_audits_missing_switches_s_middle_pop_bumper'====== Args={'value': 5, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,961 : INFO : EventManager : Event: ======'machine_var_audits_missing_switches_s_middle_skill_lane'====== Args={'value': 5, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,961 : INFO : EventManager : Event: ======'machine_var_audits_missing_switches_s_middle_upper_rollovers'====== Args={'value': 4, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,961 : INFO : EventManager : Event: ======'machine_var_audits_missing_switches_s_outer_skill_lanes'====== Args={'value': 3, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,961 : INFO : EventManager : Event: ======'machine_var_audits_missing_switches_s_right_bank_target_left'====== Args={'value': 5, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,961 : INFO : EventManager : Event: ======'machine_var_audits_missing_switches_s_right_bank_target_middle'====== Args={'value': 4, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,961 : INFO : EventManager : Event: ======'machine_var_audits_missing_switches_s_right_outlane_rollover'====== Args={'value': 10, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,961 : INFO : EventManager : Event: ======'machine_var_audits_missing_switches_s_right_pop_bumper'====== Args={'value': 4, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,961 : INFO : EventManager : Event: ======'machine_var_audits_missing_switches_s_right_sling'====== Args={'value': 5, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,961 : INFO : EventManager : Event: ======'machine_var_audits_missing_switches_s_saucer'====== Args={'value': 5, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,961 : INFO : EventManager : Event: ======'machine_var_audits_missing_switches_s_tilt'====== Args={'value': 28, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,961 : INFO : EventManager : Event: ======'machine_var_audits_player_score'====== Args={'value': {'average': 4349, 'top': [5110, 5070, 4300, 4230, 3980, 3410], 'total': 6}, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,962 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_coin_right'====== Args={'value': 1, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,962 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_credit_button'====== Args={'value': 5, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,962 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_inlanes'====== Args={'value': 47, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,962 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_left_bank_target_left'====== Args={'value': 32, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,962 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_left_bank_target_middle'====== Args={'value': 22, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,962 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_left_bank_target_right'====== Args={'value': 24, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,962 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_left_lower_bumper'====== Args={'value': 28, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,962 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_left_outlane_rollover'====== Args={'value': 20, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,962 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_left_pop_bumper'====== Args={'value': 95, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,962 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_left_sling'====== Args={'value': 89, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,962 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_left_upper_bumper'====== Args={'value': 33, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,962 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_middle_pop_bumper'====== Args={'value': 88, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,962 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_middle_skill_lane'====== Args={'value': 28, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,963 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_middle_upper_rollovers'====== Args={'value': 66, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,963 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_outer_skill_lanes'====== Args={'value': 49, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,963 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_pop_bumper_bottom'====== Args={'value': 6, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,963 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_pop_bumper_left'====== Args={'value': 2, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,963 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_pop_bumper_right'====== Args={'value': 1, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,963 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_right_bank_target_left'====== Args={'value': 40, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,963 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_right_bank_target_middle'====== Args={'value': 29, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,963 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_right_bank_target_right'====== Args={'value': 29, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,963 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_right_outlane_rollover'====== Args={'value': 3, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,963 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_right_pop_bumper'====== Args={'value': 132, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,963 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_right_sling'====== Args={'value': 67, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,963 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_saucer'====== Args={'value': 39, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,963 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_slam_tilt'====== Args={'value': 5, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,964 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_spinner'====== Args={'value': 312, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,964 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_stand_up'====== Args={'value': 8, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,964 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_start_button'====== Args={'value': 17, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,964 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_tilt'====== Args={'value': 0, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,964 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_trough'====== Args={'value': 196, 'prev_value': None, 'change': True}
2025-10-25 20:25:52,964 : INFO : EventManager : Event: ======'init_phase_5'====== Args={}
2025-10-25 20:25:52,974 : INFO : EventManager : Event: ======'init_done'====== Args={}
2025-10-25 20:25:52,976 : INFO : EventManager : Event: ======'machine_reset_phase_1'====== Args={}
2025-10-25 20:25:52,986 : INFO : EventManager : Event: ======'machine_reset_phase_2'====== Args={}
2025-10-25 20:25:52,986 : INFO : EventManager : Event: ======'machine_reset_phase_3'====== Args={}
2025-10-25 20:25:52,986 : INFO : EventManager : Event: ======'mode_attract_will_start'====== Args={'queue': <QueuedEvent>}
2025-10-25 20:25:52,987 : INFO : EventManager : Event: ======'mode_attract_starting'====== Args={'queue': <QueuedEvent>}
2025-10-25 20:25:52,987 : INFO : Mode.attract : Started. Priority: 10
2025-10-25 20:25:52,987 : INFO : EventManager : Event: ======'modes_active_modes_changed'====== Args={}
2025-10-25 20:25:52,987 : INFO : EventManager : Event: ======'mode_attract_started'====== Args={'queue': <QueuedEvent>}
2025-10-25 20:25:52,988 : INFO : EventManager : Event: ======'godot_attract_on'====== Args={'priority': 0}
2025-10-25 20:25:52,988 : INFO : EventManager : Event: ======'collecting_balls_complete'====== Args={}
2025-10-25 20:25:52,988 : INFO : EventManager : Event: ======'reset_complete'====== Args={}
2025-10-25 20:25:53,002 : INFO : Machine : Starting the main run loop with active modes: [<Mode.attract>]
2025-10-25 20:25:53,014 : INFO : EventManager : Event: ======'slide_attract_created'====== Args={'_from_bcp': True}
2025-10-25 20:25:53,014 : INFO : EventManager : Event: ======'slide__removed'====== Args={'_from_bcp': True}
2025-10-25 20:25:53,014 : INFO : EventManager : Event: ======'slide_attract_active'====== Args={'original_context': 'attract', 'original_calling_context': 'mode_attract_started', 'priority': 10.0, 'queue': '<QueuedEvent>', 'cmd': 'slides_play', '_from_bcp': True}
2025-10-25 20:25:54,987 : INFO : EventManager : Event: ======'attract_wave_complete'====== Args={'priority': 0}
2025-10-25 20:25:55,378 : INFO : EventManager : Event: ======'attract_pulse_complete'====== Args={'priority': 0}
2025-10-25 20:25:55,786 : INFO : EventManager : Event: ======'attract_pulse_complete'====== Args={'priority': 0}
2025-10-25 20:25:57,171 : INFO : SwitchController : <<<<<<< 's_start_button' active >>>>>>>
2025-10-25 20:25:57,374 : INFO : SwitchController : <<<<<<< 's_start_button' inactive >>>>>>>
2025-10-25 20:25:57,374 : INFO : EventManager : Event: ======'request_to_start_game'====== Args={}
2025-10-25 20:25:57,374 : INFO : EventManager : Event: ======'game_start'====== Args={'buttons': [], 'hold_time': 0.2029999999795109}
2025-10-25 20:25:57,376 : INFO : EventManager : Event: ======'mode_game_will_start'====== Args={'buttons': [], 'hold_time': 0.2029999999795109}
2025-10-25 20:25:57,376 : INFO : EventManager : Event: ======'mode_game_starting'====== Args={'buttons': [], 'hold_time': 0.2029999999795109}
2025-10-25 20:25:57,376 : INFO : Mode.game : Started. Priority: 20
2025-10-25 20:25:57,376 : INFO : EventManager : Event: ======'modes_active_modes_changed'====== Args={}
2025-10-25 20:25:57,376 : INFO : EventManager : Event: ======'mode_game_started'====== Args={'buttons': [], 'hold_time': 0.2029999999795109}
2025-10-25 20:25:57,389 : INFO : EventManager : Event: ======'game_will_start'====== Args={}
2025-10-25 20:25:57,389 : INFO : EventManager : Event: ======'game_starting'====== Args={'game': <Mode.game>}
2025-10-25 20:25:57,390 : INFO : EventManager : Event: ======'mode_attract_will_stop'====== Args={}
2025-10-25 20:25:57,390 : INFO : EventManager : Event: ======'mode_attract_stopping'====== Args={}
2025-10-25 20:25:57,390 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:25:57,391 : INFO : EventManager : Event: ======'godot_attract_off'====== Args={'priority': 0}
2025-10-25 20:25:57,391 : INFO : Mode.attract : Stopped.
2025-10-25 20:25:57,391 : INFO : EventManager : Event: ======'modes_active_modes_changed'====== Args={}
2025-10-25 20:25:57,392 : INFO : EventManager : Event: ======'mode_attract_stopped'====== Args={}
2025-10-25 20:25:57,392 : INFO : EventManager : Event: ======'clear'====== Args={'key': 'attract'}
2025-10-25 20:25:57,392 : INFO : EventManager : Event: ======'player_add_request'====== Args={}
2025-10-25 20:25:57,392 : INFO : EventManager : Event: ======'player_will_add'====== Args={'number': 1}
2025-10-25 20:25:57,392 : INFO : EventManager : Event: ======'player_adding'====== Args={'player': <Player 1>, 'number': 1}
2025-10-25 20:25:57,392 : INFO : EventManager : Event: ======'player_added'====== Args={'player': <Player 1>, 'num': 1}
2025-10-25 20:25:57,392 : INFO : Mode.game : Player added successfully. Total players: 1
2025-10-25 20:25:57,394 : INFO : EventManager : Event: ======'player_index'====== Args={'value': 0, 'prev_value': 0, 'change': 0, 'player_num': 1}
2025-10-25 20:25:57,394 : INFO : EventManager : Event: ======'player_number'====== Args={'value': 1, 'prev_value': 1, 'change': 0, 'player_num': 1}
2025-10-25 20:25:57,394 : INFO : EventManager : Event: ======'player_score'====== Args={'value': 0, 'prev_value': 0, 'change': 0, 'player_num': 1}
2025-10-25 20:25:57,394 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:25:57,411 : INFO : EventManager : Event: ======'game_started'====== Args={}
2025-10-25 20:25:57,411 : INFO : EventManager : Event: ======'player_turn_will_start'====== Args={'player': <Player 1>, 'number': 1}
2025-10-25 20:25:57,412 : INFO : EventManager : Event: ======'player_turn_starting'====== Args={'player': <Player 1>, 'number': 1}
2025-10-25 20:25:57,414 : INFO : EventManager : Event: ======'player_ball'====== Args={'value': 1, 'prev_value': 0, 'change': 1, 'player_num': 1}
2025-10-25 20:25:57,416 : INFO : EventManager : Event: ======'player_turn_started'====== Args={'player': <Player 1>, 'number': 1}
2025-10-25 20:25:57,417 : INFO : EventManager : Event: ======'ball_will_start'====== Args={'player': 1, 'ball': 1, 'balls_remaining': 2, 'is_extra_ball': False}
2025-10-25 20:25:57,422 : INFO : EventManager : Event: ======'ball_starting'====== Args={'player': 1, 'ball': 1, 'balls_remaining': 2, 'is_extra_ball': False}
2025-10-25 20:25:57,422 : INFO : drop_target_bank.right_bank : All targets are already up. Will not reset bank.
2025-10-25 20:25:57,422 : INFO : drop_target_bank.left_bank : All targets are already up. Will not reset bank.
2025-10-25 20:25:57,422 : INFO : EventManager : Event: ======'balls_in_play'====== Args={'balls': 1}
2025-10-25 20:25:57,423 : INFO : EventManager : Event: ======'ball_started'====== Args={'player': 1, 'ball': 1, 'balls_remaining': 2, 'is_extra_ball': False}
2025-10-25 20:25:57,423 : INFO : EventManager : Event: ======'mode_base_will_start'====== Args={'player': 1, 'ball': 1, 'balls_remaining': 2, 'is_extra_ball': False}
2025-10-25 20:25:57,423 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:25:57,426 : INFO : EventManager : Event: ======'mode_base_starting'====== Args={'player': 1, 'ball': 1, 'balls_remaining': 2, 'is_extra_ball': False}
2025-10-25 20:25:57,427 : INFO : EventManager : Event: ======'info_flip_back_now'====== Args={'priority': 0, 'delay': '2s'}
2025-10-25 20:25:57,427 : INFO : Mode.base : Started. Priority: 50
2025-10-25 20:25:57,427 : INFO : EventManager : Event: ======'modes_active_modes_changed'====== Args={}
2025-10-25 20:25:57,427 : INFO : EventManager : Event: ======'mode_base_started'====== Args={'player': 1, 'ball': 1, 'balls_remaining': 2, 'is_extra_ball': False}
2025-10-25 20:25:57,428 : INFO : EventManager : Event: ======'single_player_ball_started'====== Args={}
2025-10-25 20:25:57,440 : INFO : EventManager : Event: ======'ball_start_target'====== Args={'target': 'playfield'}
2025-10-25 20:25:57,441 : INFO : ball_device.bd_trough : Setting up player-controlled eject. Balls: 1, Target: <playfield.playfield>, player_controlled_eject_event: None
2025-10-25 20:25:57,441 : INFO : ball_device.bd_trough : Adding 1 ball(s) to the eject_queue with target <playfield.playfield>.
2025-10-25 20:25:57,441 : INFO : EventManager : Event: ======'balldevice_balls_available'====== Args={}
2025-10-25 20:25:57,442 : INFO : ball_device.bd_trough : State: waiting_for_target_ready
2025-10-25 20:25:57,442 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_eject_attempt'====== Args={'balls': 1, 'target': <playfield.playfield>, 'source': <ball_device.bd_trough>, 'mechanical_eject': False, 'num_attempts': 0}
2025-10-25 20:25:57,442 : INFO : ball_device.bd_trough : State: ejecting
2025-10-25 20:25:57,442 : INFO : ball_device.bd_trough : Ejecting ball to <playfield.playfield>
2025-10-25 20:25:57,442 : INFO : EventManager : Event: ======'balldevice_bd_trough_ejecting_ball'====== Args={'balls': 1, 'target': <playfield.playfield>, 'source': <ball_device.bd_trough>, 'mechanical_eject': False, 'num_attempts': 0}
2025-10-25 20:25:57,443 : INFO : ball_device.bd_trough : Wait for ball to leave device
2025-10-25 20:25:57,443 : INFO : coil.c_trough_eject : Pulsing Driver for 40ms (1.0 pulse_power)
2025-10-25 20:25:57,515 : INFO : SwitchController : <<<<<<< 's_trough' inactive >>>>>>>
2025-10-25 20:25:57,521 : INFO : ball_device.bd_trough : State: ball_left
2025-10-25 20:25:57,521 : INFO : ball_device.bd_trough : Ball left
2025-10-25 20:25:57,521 : INFO : ball_device.bd_trough : Wait for confirm with timeout 10.0
2025-10-25 20:25:59,940 : INFO : SwitchController : <<<<<<< 's_start_button' active >>>>>>>
2025-10-25 20:25:59,940 : INFO : EventManager : Event: ======'sw_start'====== Args={}
2025-10-25 20:25:59,940 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_start_button'====== Args={'value': 18, 'prev_value': 17, 'change': 1}
2025-10-25 20:25:59,941 : INFO : EventManager : Event: ======'player_add_request'====== Args={}
2025-10-25 20:25:59,941 : INFO : EventManager : Event: ======'player_will_add'====== Args={'number': 2}
2025-10-25 20:25:59,941 : INFO : EventManager : Event: ======'player_adding'====== Args={'player': <Player 2>, 'number': 2}
2025-10-25 20:25:59,941 : INFO : EventManager : Event: ======'player_added'====== Args={'player': <Player 2>, 'num': 2}
2025-10-25 20:25:59,941 : INFO : Mode.game : Player added successfully. Total players: 2
2025-10-25 20:25:59,941 : INFO : EventManager : Event: ======'multiplayer_game'====== Args={}
2025-10-25 20:25:59,942 : INFO : EventManager : Event: ======'player_index'====== Args={'value': 1, 'prev_value': 1, 'change': 0, 'player_num': 2}
2025-10-25 20:25:59,942 : INFO : EventManager : Event: ======'player_number'====== Args={'value': 2, 'prev_value': 2, 'change': 0, 'player_num': 2}
2025-10-25 20:25:59,942 : INFO : EventManager : Event: ======'player_score'====== Args={'value': 0, 'prev_value': 0, 'change': 0, 'player_num': 2}
2025-10-25 20:25:59,943 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:25:59,952 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:26:00,112 : INFO : SwitchController : <<<<<<< 's_start_button' inactive >>>>>>>
2025-10-25 20:26:06,378 : INFO : SwitchController : <<<<<<< 's_start_button' active >>>>>>>
2025-10-25 20:26:06,378 : INFO : EventManager : Event: ======'sw_start'====== Args={}
2025-10-25 20:26:06,378 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_start_button'====== Args={'value': 19, 'prev_value': 18, 'change': 1}
2025-10-25 20:26:06,379 : INFO : EventManager : Event: ======'player_add_request'====== Args={}
2025-10-25 20:26:06,379 : INFO : EventManager : Event: ======'player_will_add'====== Args={'number': 3}
2025-10-25 20:26:06,379 : INFO : EventManager : Event: ======'player_adding'====== Args={'player': <Player 3>, 'number': 3}
2025-10-25 20:26:06,379 : INFO : EventManager : Event: ======'player_added'====== Args={'player': <Player 3>, 'num': 3}
2025-10-25 20:26:06,379 : INFO : Mode.game : Player added successfully. Total players: 3
2025-10-25 20:26:06,379 : INFO : EventManager : Event: ======'player_index'====== Args={'value': 2, 'prev_value': 2, 'change': 0, 'player_num': 3}
2025-10-25 20:26:06,379 : INFO : EventManager : Event: ======'player_number'====== Args={'value': 3, 'prev_value': 3, 'change': 0, 'player_num': 3}
2025-10-25 20:26:06,380 : INFO : EventManager : Event: ======'player_score'====== Args={'value': 0, 'prev_value': 0, 'change': 0, 'player_num': 3}
2025-10-25 20:26:06,380 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:26:06,390 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:26:06,391 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:26:06,551 : INFO : SwitchController : <<<<<<< 's_start_button' inactive >>>>>>>
2025-10-25 20:26:06,772 : INFO : SwitchController : <<<<<<< 's_start_button' active >>>>>>>
2025-10-25 20:26:06,772 : INFO : EventManager : Event: ======'sw_start'====== Args={}
2025-10-25 20:26:06,772 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_start_button'====== Args={'value': 20, 'prev_value': 19, 'change': 1}
2025-10-25 20:26:06,773 : INFO : EventManager : Event: ======'player_add_request'====== Args={}
2025-10-25 20:26:06,773 : INFO : EventManager : Event: ======'player_will_add'====== Args={'number': 4}
2025-10-25 20:26:06,773 : INFO : EventManager : Event: ======'player_adding'====== Args={'player': <Player 4>, 'number': 4}
2025-10-25 20:26:06,773 : INFO : EventManager : Event: ======'player_added'====== Args={'player': <Player 4>, 'num': 4}
2025-10-25 20:26:06,773 : INFO : Mode.game : Player added successfully. Total players: 4
2025-10-25 20:26:06,773 : INFO : EventManager : Event: ======'player_index'====== Args={'value': 3, 'prev_value': 3, 'change': 0, 'player_num': 4}
2025-10-25 20:26:06,773 : INFO : EventManager : Event: ======'player_number'====== Args={'value': 4, 'prev_value': 4, 'change': 0, 'player_num': 4}
2025-10-25 20:26:06,774 : INFO : EventManager : Event: ======'player_score'====== Args={'value': 0, 'prev_value': 0, 'change': 0, 'player_num': 4}
2025-10-25 20:26:06,774 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:26:06,781 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:26:06,781 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:26:06,913 : INFO : SwitchController : <<<<<<< 's_start_button' inactive >>>>>>>
2025-10-25 20:26:07,520 : INFO : ball_device.bd_trough : State: failed_confirm
2025-10-25 20:26:07,520 : INFO : ball_device.bd_trough : Got timeout (10.0s) before confirm from <playfield.playfield>
2025-10-25 20:26:07,613 : INFO : ball_device.bd_trough : Confirming eject because target is playfield and ball did not return.
2025-10-25 20:26:07,613 : INFO : ball_device.bd_trough : Eject successful
2025-10-25 20:26:07,613 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_eject_success'====== Args={'balls': 1, 'target': <playfield.playfield>}
2025-10-25 20:26:07,613 : INFO : EventManager : Event: ======'balldevice_playfield_ball_enter'====== Args={'new_balls': 1, 'unclaimed_balls': 1, 'device': <playfield.playfield>}
2025-10-25 20:26:07,613 : INFO : EventManager : Event: ======'playfield_ball_count_change'====== Args={'balls': 1, 'change': 1}
2025-10-25 20:26:07,614 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_count_changed'====== Args={'balls': 0}
2025-10-25 20:26:07,614 : INFO : ball_device.bd_trough : State: idle
2025-10-25 20:26:10,654 : INFO : SwitchController : <<<<<<< 's_inlanes' active >>>>>>>
2025-10-25 20:26:10,654 : INFO : EventManager : Event: ======'s_inlanes_active'====== Args={}
2025-10-25 20:26:10,654 : INFO : EventManager : Event: ======'sw_playfield_active'====== Args={}
2025-10-25 20:26:10,654 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_inlanes'====== Args={'value': 48, 'prev_value': 47, 'change': 1}
2025-10-25 20:26:10,655 : INFO : EventManager : Event: ======'player_score'====== Args={'value': 100, 'prev_value': 0, 'change': 100, 'player_num': 1, 'source': 'base'}
2025-10-25 20:26:10,656 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:26:10,666 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:26:10,667 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:26:10,670 : INFO : SwitchController : <<<<<<< 's_inlanes' inactive >>>>>>>
2025-10-25 20:26:13,020 : INFO : SwitchController : <<<<<<< 's_trough' active >>>>>>>
2025-10-25 20:26:13,020 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_trough'====== Args={'value': 197, 'prev_value': 196, 'change': 1}
2025-10-25 20:26:13,028 : INFO : SwitchController : <<<<<<< 's_trough' inactive >>>>>>>
2025-10-25 20:26:13,099 : INFO : SwitchController : <<<<<<< 's_trough' active >>>>>>>
2025-10-25 20:26:13,099 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_trough'====== Args={'value': 198, 'prev_value': 197, 'change': 1}
2025-10-25 20:26:13,584 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_count_changed'====== Args={'balls': 1}
2025-10-25 20:26:13,584 : INFO : ball_device.bd_trough : Received unexpected ball
2025-10-25 20:26:13,584 : INFO : EventManager : Event: ======'balldevice_captured_from_playfield'====== Args={'balls': 1}
2025-10-25 20:26:13,585 : INFO : EventManager : Event: ======'sw_playfield_active'====== Args={'balls': 1}
2025-10-25 20:26:13,585 : INFO : EventManager : Event: ======'playfield_ball_count_change'====== Args={'balls': 0, 'change': -1}
2025-10-25 20:26:13,585 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_enter'====== Args={'new_balls': 1, 'unclaimed_balls': 1, 'new_available_balls': 1, 'device': <ball_device.bd_trough>}
2025-10-25 20:26:13,586 : INFO : EventManager : Event: ======'ball_drain'====== Args={'device': <ball_device.bd_trough>, 'balls': 1}
2025-10-25 20:26:13,586 : INFO : EventManager : Event: ======'ball_will_end'====== Args={}
2025-10-25 20:26:13,586 : INFO : EventManager : Event: ======'balldevice_balls_available'====== Args={}
2025-10-25 20:26:13,586 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_entered'====== Args={'new_balls': 1, 'device': <ball_device.bd_trough>}
2025-10-25 20:26:13,586 : INFO : EventManager : Event: ======'ball_ending'====== Args={}
2025-10-25 20:26:13,586 : INFO : EventManager : Event: ======'mode_base_will_stop'====== Args={}
2025-10-25 20:26:13,586 : INFO : EventManager : Event: ======'mode_base_stopping'====== Args={}
2025-10-25 20:26:13,588 : INFO : EventManager : Event: ======'stop_base_music'====== Args={'priority': 0}
2025-10-25 20:26:13,588 : INFO : Mode.base : Stopped.
2025-10-25 20:26:13,588 : INFO : EventManager : Event: ======'modes_active_modes_changed'====== Args={}
2025-10-25 20:26:13,588 : INFO : EventManager : Event: ======'mode_base_stopped'====== Args={}
2025-10-25 20:26:13,589 : INFO : EventManager : Event: ======'clear'====== Args={'key': 'base'}
2025-10-25 20:26:13,602 : INFO : EventManager : Event: ======'ball_ended'====== Args={}
2025-10-25 20:26:13,603 : INFO : EventManager : Event: ======'player_turn_will_end'====== Args={'player': <Player 1>, 'number': 1}
2025-10-25 20:26:13,608 : INFO : EventManager : Event: ======'player_turn_ending'====== Args={'player': <Player 1>, 'number': 1}
2025-10-25 20:26:13,608 : INFO : EventManager : Event: ======'player_turn_ended'====== Args={'player': <Player 1>, 'number': 1}
2025-10-25 20:26:13,609 : INFO : EventManager : Event: ======'player_turn_will_start'====== Args={'player': <Player 2>, 'number': 2}
2025-10-25 20:26:13,609 : INFO : EventManager : Event: ======'player_turn_starting'====== Args={'player': <Player 2>, 'number': 2}
2025-10-25 20:26:13,609 : INFO : EventManager : Event: ======'player_ball'====== Args={'value': 1, 'prev_value': 0, 'change': 1, 'player_num': 2}
2025-10-25 20:26:13,610 : INFO : EventManager : Event: ======'player_turn_started'====== Args={'player': <Player 2>, 'number': 2}
2025-10-25 20:26:13,610 : INFO : EventManager : Event: ======'ball_will_start'====== Args={'player': 2, 'ball': 1, 'balls_remaining': 2, 'is_extra_ball': False}
2025-10-25 20:26:13,614 : INFO : EventManager : Event: ======'ball_starting'====== Args={'player': 2, 'ball': 1, 'balls_remaining': 2, 'is_extra_ball': False}
2025-10-25 20:26:13,614 : INFO : drop_target_bank.right_bank : All targets are already up. Will not reset bank.
2025-10-25 20:26:13,614 : INFO : drop_target_bank.left_bank : All targets are already up. Will not reset bank.
2025-10-25 20:26:13,615 : INFO : EventManager : Event: ======'balls_in_play'====== Args={'balls': 1}
2025-10-25 20:26:13,615 : INFO : EventManager : Event: ======'ball_started'====== Args={'player': 2, 'ball': 1, 'balls_remaining': 2, 'is_extra_ball': False}
2025-10-25 20:26:13,615 : INFO : EventManager : Event: ======'mode_base_will_start'====== Args={'player': 2, 'ball': 1, 'balls_remaining': 2, 'is_extra_ball': False}
2025-10-25 20:26:13,615 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:26:13,618 : INFO : EventManager : Event: ======'mode_base_starting'====== Args={'player': 2, 'ball': 1, 'balls_remaining': 2, 'is_extra_ball': False}
2025-10-25 20:26:13,618 : INFO : EventManager : Event: ======'info_flip_back_now'====== Args={'priority': 0, 'delay': '2s'}
2025-10-25 20:26:13,618 : INFO : Mode.base : Started. Priority: 50
2025-10-25 20:26:13,618 : INFO : EventManager : Event: ======'modes_active_modes_changed'====== Args={}
2025-10-25 20:26:13,618 : INFO : EventManager : Event: ======'mode_base_started'====== Args={'player': 2, 'ball': 1, 'balls_remaining': 2, 'is_extra_ball': False}
2025-10-25 20:26:13,619 : INFO : EventManager : Event: ======'multi_player_ball_started'====== Args={}
2025-10-25 20:26:13,632 : INFO : EventManager : Event: ======'player_2_ball_started'====== Args={}
2025-10-25 20:26:13,632 : INFO : EventManager : Event: ======'ball_start_target'====== Args={'target': 'playfield'}
2025-10-25 20:26:13,633 : INFO : ball_device.bd_trough : Setting up player-controlled eject. Balls: 1, Target: <playfield.playfield>, player_controlled_eject_event: None
2025-10-25 20:26:13,633 : INFO : ball_device.bd_trough : Adding 1 ball(s) to the eject_queue with target <playfield.playfield>.
2025-10-25 20:26:13,633 : INFO : EventManager : Event: ======'balldevice_balls_available'====== Args={}
2025-10-25 20:26:13,634 : INFO : ball_device.bd_trough : State: waiting_for_target_ready
2025-10-25 20:26:13,634 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_eject_attempt'====== Args={'balls': 1, 'target': <playfield.playfield>, 'source': <ball_device.bd_trough>, 'mechanical_eject': False, 'num_attempts': 0}
2025-10-25 20:26:13,634 : INFO : ball_device.bd_trough : State: ejecting
2025-10-25 20:26:13,634 : INFO : ball_device.bd_trough : Ejecting ball to <playfield.playfield>
2025-10-25 20:26:13,634 : INFO : EventManager : Event: ======'balldevice_bd_trough_ejecting_ball'====== Args={'balls': 1, 'target': <playfield.playfield>, 'source': <ball_device.bd_trough>, 'mechanical_eject': False, 'num_attempts': 0}
2025-10-25 20:26:13,635 : INFO : ball_device.bd_trough : Wait for ball to leave device
2025-10-25 20:26:13,635 : INFO : coil.c_trough_eject : Pulsing Driver for 40ms (1.0 pulse_power)
2025-10-25 20:26:13,694 : INFO : SwitchController : <<<<<<< 's_trough' inactive >>>>>>>
2025-10-25 20:26:13,700 : INFO : ball_device.bd_trough : State: ball_left
2025-10-25 20:26:13,700 : INFO : ball_device.bd_trough : Ball left
2025-10-25 20:26:13,700 : INFO : ball_device.bd_trough : Wait for confirm with timeout 10.0
2025-10-25 20:26:15,631 : INFO : SwitchController : <<<<<<< 's_inlanes' active >>>>>>>
2025-10-25 20:26:15,631 : INFO : EventManager : Event: ======'s_inlanes_active'====== Args={}
2025-10-25 20:26:15,631 : INFO : EventManager : Event: ======'sw_playfield_active'====== Args={}
2025-10-25 20:26:15,631 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_inlanes'====== Args={'value': 49, 'prev_value': 48, 'change': 1}
2025-10-25 20:26:15,632 : INFO : EventManager : Event: ======'player_score'====== Args={'value': 100, 'prev_value': 0, 'change': 100, 'player_num': 2, 'source': 'base'}
2025-10-25 20:26:15,633 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:26:15,633 : INFO : EventManager : Event: ======'playfield_active'====== Args={'source': None}
2025-10-25 20:26:15,642 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:26:15,644 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:26:15,644 : INFO : ball_device.bd_trough : Got eject confirm
2025-10-25 20:26:15,644 : INFO : ball_device.bd_trough : Eject successful
2025-10-25 20:26:15,644 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_eject_success'====== Args={'balls': 1, 'target': <playfield.playfield>}
2025-10-25 20:26:15,644 : INFO : EventManager : Event: ======'balldevice_playfield_ball_enter'====== Args={'new_balls': 1, 'unclaimed_balls': 1, 'device': <playfield.playfield>}
2025-10-25 20:26:15,645 : INFO : EventManager : Event: ======'playfield_ball_count_change'====== Args={'balls': 1, 'change': 1}
2025-10-25 20:26:15,645 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_count_changed'====== Args={'balls': 0}
2025-10-25 20:26:15,645 : INFO : ball_device.bd_trough : State: idle
2025-10-25 20:26:15,646 : INFO : SwitchController : <<<<<<< 's_inlanes' inactive >>>>>>>
2025-10-25 20:26:18,009 : INFO : SwitchController : <<<<<<< 's_trough' active >>>>>>>
2025-10-25 20:26:18,009 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_trough'====== Args={'value': 199, 'prev_value': 198, 'change': 1}
2025-10-25 20:26:18,025 : INFO : SwitchController : <<<<<<< 's_trough' inactive >>>>>>>
2025-10-25 20:26:18,072 : INFO : SwitchController : <<<<<<< 's_trough' active >>>>>>>
2025-10-25 20:26:18,072 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_trough'====== Args={'value': 200, 'prev_value': 199, 'change': 1}
2025-10-25 20:26:18,568 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_count_changed'====== Args={'balls': 1}
2025-10-25 20:26:18,568 : INFO : ball_device.bd_trough : Received unexpected ball
2025-10-25 20:26:18,568 : INFO : EventManager : Event: ======'balldevice_captured_from_playfield'====== Args={'balls': 1}
2025-10-25 20:26:18,569 : INFO : EventManager : Event: ======'sw_playfield_active'====== Args={'balls': 1}
2025-10-25 20:26:18,569 : INFO : EventManager : Event: ======'playfield_ball_count_change'====== Args={'balls': 0, 'change': -1}
2025-10-25 20:26:18,569 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_enter'====== Args={'new_balls': 1, 'unclaimed_balls': 1, 'new_available_balls': 1, 'device': <ball_device.bd_trough>}
2025-10-25 20:26:18,569 : INFO : EventManager : Event: ======'ball_drain'====== Args={'device': <ball_device.bd_trough>, 'balls': 1}
2025-10-25 20:26:18,570 : INFO : EventManager : Event: ======'ball_will_end'====== Args={}
2025-10-25 20:26:18,570 : INFO : EventManager : Event: ======'balldevice_balls_available'====== Args={}
2025-10-25 20:26:18,570 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_entered'====== Args={'new_balls': 1, 'device': <ball_device.bd_trough>}
2025-10-25 20:26:18,571 : INFO : EventManager : Event: ======'ball_ending'====== Args={}
2025-10-25 20:26:18,571 : INFO : EventManager : Event: ======'mode_base_will_stop'====== Args={}
2025-10-25 20:26:18,571 : INFO : EventManager : Event: ======'mode_base_stopping'====== Args={}
2025-10-25 20:26:18,571 : INFO : EventManager : Event: ======'stop_base_music'====== Args={'priority': 0}
2025-10-25 20:26:18,572 : INFO : Mode.base : Stopped.
2025-10-25 20:26:18,572 : INFO : EventManager : Event: ======'modes_active_modes_changed'====== Args={}
2025-10-25 20:26:18,572 : INFO : EventManager : Event: ======'mode_base_stopped'====== Args={}
2025-10-25 20:26:18,572 : INFO : EventManager : Event: ======'clear'====== Args={'key': 'base'}
2025-10-25 20:26:18,585 : INFO : EventManager : Event: ======'ball_ended'====== Args={}
2025-10-25 20:26:18,586 : INFO : EventManager : Event: ======'player_turn_will_end'====== Args={'player': <Player 2>, 'number': 2}
2025-10-25 20:26:18,590 : INFO : EventManager : Event: ======'player_turn_ending'====== Args={'player': <Player 2>, 'number': 2}
2025-10-25 20:26:18,590 : INFO : EventManager : Event: ======'player_turn_ended'====== Args={'player': <Player 2>, 'number': 2}
2025-10-25 20:26:18,590 : INFO : EventManager : Event: ======'player_turn_will_start'====== Args={'player': <Player 3>, 'number': 3}
2025-10-25 20:26:18,591 : INFO : EventManager : Event: ======'player_turn_starting'====== Args={'player': <Player 3>, 'number': 3}
2025-10-25 20:26:18,591 : INFO : EventManager : Event: ======'player_ball'====== Args={'value': 1, 'prev_value': 0, 'change': 1, 'player_num': 3}
2025-10-25 20:26:18,591 : INFO : EventManager : Event: ======'player_turn_started'====== Args={'player': <Player 3>, 'number': 3}
2025-10-25 20:26:18,592 : INFO : EventManager : Event: ======'ball_will_start'====== Args={'player': 3, 'ball': 1, 'balls_remaining': 2, 'is_extra_ball': False}
2025-10-25 20:26:18,596 : INFO : EventManager : Event: ======'ball_starting'====== Args={'player': 3, 'ball': 1, 'balls_remaining': 2, 'is_extra_ball': False}
2025-10-25 20:26:18,597 : INFO : drop_target_bank.right_bank : All targets are already up. Will not reset bank.
2025-10-25 20:26:18,597 : INFO : drop_target_bank.left_bank : All targets are already up. Will not reset bank.
2025-10-25 20:26:18,597 : INFO : EventManager : Event: ======'balls_in_play'====== Args={'balls': 1}
2025-10-25 20:26:18,597 : INFO : EventManager : Event: ======'ball_started'====== Args={'player': 3, 'ball': 1, 'balls_remaining': 2, 'is_extra_ball': False}
2025-10-25 20:26:18,598 : INFO : EventManager : Event: ======'mode_base_will_start'====== Args={'player': 3, 'ball': 1, 'balls_remaining': 2, 'is_extra_ball': False}
2025-10-25 20:26:18,598 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:26:18,600 : INFO : EventManager : Event: ======'mode_base_starting'====== Args={'player': 3, 'ball': 1, 'balls_remaining': 2, 'is_extra_ball': False}
2025-10-25 20:26:18,600 : INFO : EventManager : Event: ======'info_flip_back_now'====== Args={'priority': 0, 'delay': '2s'}
2025-10-25 20:26:18,602 : INFO : Mode.base : Started. Priority: 50
2025-10-25 20:26:18,602 : INFO : EventManager : Event: ======'modes_active_modes_changed'====== Args={}
2025-10-25 20:26:18,602 : INFO : EventManager : Event: ======'mode_base_started'====== Args={'player': 3, 'ball': 1, 'balls_remaining': 2, 'is_extra_ball': False}
2025-10-25 20:26:18,602 : INFO : EventManager : Event: ======'multi_player_ball_started'====== Args={}
2025-10-25 20:26:18,615 : INFO : EventManager : Event: ======'player_3_ball_started'====== Args={}
2025-10-25 20:26:18,615 : INFO : EventManager : Event: ======'ball_start_target'====== Args={'target': 'playfield'}
2025-10-25 20:26:18,616 : INFO : ball_device.bd_trough : Setting up player-controlled eject. Balls: 1, Target: <playfield.playfield>, player_controlled_eject_event: None
2025-10-25 20:26:18,616 : INFO : ball_device.bd_trough : Adding 1 ball(s) to the eject_queue with target <playfield.playfield>.
2025-10-25 20:26:18,616 : INFO : EventManager : Event: ======'balldevice_balls_available'====== Args={}
2025-10-25 20:26:18,616 : INFO : ball_device.bd_trough : State: waiting_for_target_ready
2025-10-25 20:26:18,616 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_eject_attempt'====== Args={'balls': 1, 'target': <playfield.playfield>, 'source': <ball_device.bd_trough>, 'mechanical_eject': False, 'num_attempts': 0}
2025-10-25 20:26:18,617 : INFO : ball_device.bd_trough : State: ejecting
2025-10-25 20:26:18,617 : INFO : ball_device.bd_trough : Ejecting ball to <playfield.playfield>
2025-10-25 20:26:18,617 : INFO : EventManager : Event: ======'balldevice_bd_trough_ejecting_ball'====== Args={'balls': 1, 'target': <playfield.playfield>, 'source': <ball_device.bd_trough>, 'mechanical_eject': False, 'num_attempts': 0}
2025-10-25 20:26:18,617 : INFO : ball_device.bd_trough : Wait for ball to leave device
2025-10-25 20:26:18,617 : INFO : coil.c_trough_eject : Pulsing Driver for 40ms (1.0 pulse_power)
2025-10-25 20:26:18,675 : INFO : SwitchController : <<<<<<< 's_trough' inactive >>>>>>>
2025-10-25 20:26:18,682 : INFO : ball_device.bd_trough : State: ball_left
2025-10-25 20:26:18,682 : INFO : ball_device.bd_trough : Ball left
2025-10-25 20:26:18,682 : INFO : ball_device.bd_trough : Wait for confirm with timeout 10.0
2025-10-25 20:26:20,661 : INFO : SwitchController : <<<<<<< 's_right_outlane_rollover' active >>>>>>>
2025-10-25 20:26:20,661 : INFO : EventManager : Event: ======'s_right_outlane_rollover_active'====== Args={}
2025-10-25 20:26:20,661 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_right_outlane_rollover'====== Args={'value': 4, 'prev_value': 3, 'change': 1}
2025-10-25 20:26:20,662 : INFO : EventManager : Event: ======'player_score'====== Args={'value': 100, 'prev_value': 0, 'change': 100, 'player_num': 3, 'source': 'base'}
2025-10-25 20:26:20,663 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:26:20,672 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:26:20,673 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:26:20,768 : INFO : SwitchController : <<<<<<< 's_right_outlane_rollover' inactive >>>>>>>
2025-10-25 20:26:23,087 : INFO : SwitchController : <<<<<<< 's_trough' active >>>>>>>
2025-10-25 20:26:23,087 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_trough'====== Args={'value': 201, 'prev_value': 200, 'change': 1}
2025-10-25 20:26:23,134 : INFO : SwitchController : <<<<<<< 's_trough' inactive >>>>>>>
2025-10-25 20:26:23,148 : INFO : SwitchController : <<<<<<< 's_trough' active >>>>>>>
2025-10-25 20:26:23,148 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_trough'====== Args={'value': 202, 'prev_value': 201, 'change': 1}
2025-10-25 20:26:28,692 : INFO : ball_device.bd_trough : State: failed_confirm
2025-10-25 20:26:28,692 : INFO : ball_device.bd_trough : Got timeout (10.0s) before confirm from <playfield.playfield>
2025-10-25 20:26:28,771 : INFO : ball_device.bd_trough : Got unknown balls. Assuming a ball returned.
2025-10-25 20:26:28,771 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_eject_failed'====== Args={'target': <playfield.playfield>, 'balls': 1, 'retry': True, 'num_attempts': 1}
2025-10-25 20:26:28,772 : INFO : ball_device.bd_trough : State: waiting_for_target_ready
2025-10-25 20:26:28,772 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_eject_attempt'====== Args={'balls': 1, 'target': <playfield.playfield>, 'source': <ball_device.bd_trough>, 'mechanical_eject': False, 'num_attempts': 1}
2025-10-25 20:26:28,773 : INFO : ball_device.bd_trough : State: ejecting
2025-10-25 20:26:28,773 : INFO : ball_device.bd_trough : Ejecting ball to <playfield.playfield>
2025-10-25 20:26:28,773 : INFO : EventManager : Event: ======'balldevice_bd_trough_ejecting_ball'====== Args={'balls': 1, 'target': <playfield.playfield>, 'source': <ball_device.bd_trough>, 'mechanical_eject': False, 'num_attempts': 1}
2025-10-25 20:26:28,774 : INFO : ball_device.bd_trough : Wait for ball to leave device
2025-10-25 20:26:28,774 : INFO : coil.c_trough_eject : Pulsing Driver for 40ms (1.0 pulse_power)
2025-10-25 20:26:28,834 : INFO : SwitchController : <<<<<<< 's_trough' inactive >>>>>>>
2025-10-25 20:26:28,840 : INFO : ball_device.bd_trough : State: ball_left
2025-10-25 20:26:28,840 : INFO : ball_device.bd_trough : Ball left
2025-10-25 20:26:28,840 : INFO : ball_device.bd_trough : Wait for confirm with timeout 10.0
2025-10-25 20:26:35,915 : INFO : SwitchController : <<<<<<< 's_right_outlane_rollover' active >>>>>>>
2025-10-25 20:26:35,915 : INFO : EventManager : Event: ======'s_right_outlane_rollover_active'====== Args={}
2025-10-25 20:26:35,915 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_right_outlane_rollover'====== Args={'value': 5, 'prev_value': 4, 'change': 1}
2025-10-25 20:26:35,923 : INFO : EventManager : Event: ======'player_score'====== Args={'value': 200, 'prev_value': 100, 'change': 100, 'player_num': 3, 'source': 'base'}
2025-10-25 20:26:35,924 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:26:35,932 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:26:35,933 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:26:35,934 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:26:36,025 : INFO : SwitchController : <<<<<<< 's_right_outlane_rollover' inactive >>>>>>>
2025-10-25 20:26:38,382 : INFO : SwitchController : <<<<<<< 's_trough' active >>>>>>>
2025-10-25 20:26:38,382 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_trough'====== Args={'value': 203, 'prev_value': 202, 'change': 1}
2025-10-25 20:26:38,398 : INFO : SwitchController : <<<<<<< 's_trough' inactive >>>>>>>
2025-10-25 20:26:38,414 : INFO : SwitchController : <<<<<<< 's_trough' active >>>>>>>
2025-10-25 20:26:38,414 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_trough'====== Args={'value': 204, 'prev_value': 203, 'change': 1}
2025-10-25 20:26:38,834 : INFO : ball_device.bd_trough : State: failed_confirm
2025-10-25 20:26:38,834 : INFO : ball_device.bd_trough : Got timeout (10.0s) before confirm from <playfield.playfield>
2025-10-25 20:26:38,928 : INFO : ball_device.bd_trough : Got unknown balls. Assuming a ball returned.
2025-10-25 20:26:38,928 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_eject_failed'====== Args={'target': <playfield.playfield>, 'balls': 1, 'retry': True, 'num_attempts': 2}
2025-10-25 20:26:38,929 : INFO : ball_device.bd_trough : State: waiting_for_target_ready
2025-10-25 20:26:38,929 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_eject_attempt'====== Args={'balls': 1, 'target': <playfield.playfield>, 'source': <ball_device.bd_trough>, 'mechanical_eject': False, 'num_attempts': 2}
2025-10-25 20:26:38,929 : INFO : ball_device.bd_trough : State: ejecting
2025-10-25 20:26:38,929 : INFO : ball_device.bd_trough : Ejecting ball to <playfield.playfield>
2025-10-25 20:26:38,929 : INFO : EventManager : Event: ======'balldevice_bd_trough_ejecting_ball'====== Args={'balls': 1, 'target': <playfield.playfield>, 'source': <ball_device.bd_trough>, 'mechanical_eject': False, 'num_attempts': 2}
2025-10-25 20:26:38,931 : INFO : ball_device.bd_trough : Wait for ball to leave device
2025-10-25 20:26:38,931 : INFO : coil.c_trough_eject : Pulsing Driver for 40ms (1.0 pulse_power)
2025-10-25 20:26:38,990 : INFO : SwitchController : <<<<<<< 's_trough' inactive >>>>>>>
2025-10-25 20:26:38,996 : INFO : ball_device.bd_trough : State: ball_left
2025-10-25 20:26:38,996 : INFO : ball_device.bd_trough : Ball left
2025-10-25 20:26:38,996 : INFO : ball_device.bd_trough : Wait for confirm with timeout 10.0
2025-10-25 20:26:42,529 : INFO : SwitchController : <<<<<<< 's_inlanes' active >>>>>>>
2025-10-25 20:26:42,529 : INFO : EventManager : Event: ======'s_inlanes_active'====== Args={}
2025-10-25 20:26:42,529 : INFO : EventManager : Event: ======'sw_playfield_active'====== Args={}
2025-10-25 20:26:42,529 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_inlanes'====== Args={'value': 50, 'prev_value': 49, 'change': 1}
2025-10-25 20:26:42,530 : INFO : EventManager : Event: ======'player_score'====== Args={'value': 300, 'prev_value': 200, 'change': 100, 'player_num': 3, 'source': 'base'}
2025-10-25 20:26:42,531 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:26:42,531 : INFO : EventManager : Event: ======'playfield_active'====== Args={'source': None}
2025-10-25 20:26:42,541 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:26:42,543 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:26:42,543 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:26:42,544 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:26:42,544 : INFO : ball_device.bd_trough : Got eject confirm
2025-10-25 20:26:42,544 : INFO : ball_device.bd_trough : Eject successful
2025-10-25 20:26:42,545 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_eject_success'====== Args={'balls': 1, 'target': <playfield.playfield>}
2025-10-25 20:26:42,545 : INFO : EventManager : Event: ======'balldevice_playfield_ball_enter'====== Args={'new_balls': 1, 'unclaimed_balls': 1, 'device': <playfield.playfield>}
2025-10-25 20:26:42,545 : INFO : EventManager : Event: ======'playfield_ball_count_change'====== Args={'balls': 1, 'change': 1}
2025-10-25 20:26:42,546 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_count_changed'====== Args={'balls': 0}
2025-10-25 20:26:42,546 : INFO : ball_device.bd_trough : State: idle
2025-10-25 20:26:42,591 : INFO : SwitchController : <<<<<<< 's_inlanes' inactive >>>>>>>
2025-10-25 20:26:45,073 : INFO : SwitchController : <<<<<<< 's_trough' active >>>>>>>
2025-10-25 20:26:45,073 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_trough'====== Args={'value': 205, 'prev_value': 204, 'change': 1}
2025-10-25 20:26:45,090 : INFO : SwitchController : <<<<<<< 's_trough' inactive >>>>>>>
2025-10-25 20:26:45,138 : INFO : SwitchController : <<<<<<< 's_trough' active >>>>>>>
2025-10-25 20:26:45,138 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_trough'====== Args={'value': 206, 'prev_value': 205, 'change': 1}
2025-10-25 20:26:45,153 : INFO : SwitchController : <<<<<<< 's_trough' inactive >>>>>>>
2025-10-25 20:26:45,169 : INFO : SwitchController : <<<<<<< 's_trough' active >>>>>>>
2025-10-25 20:26:45,169 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_trough'====== Args={'value': 207, 'prev_value': 206, 'change': 1}
2025-10-25 20:26:45,667 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_count_changed'====== Args={'balls': 1}
2025-10-25 20:26:45,667 : INFO : ball_device.bd_trough : Received unexpected ball
2025-10-25 20:26:45,667 : INFO : EventManager : Event: ======'balldevice_captured_from_playfield'====== Args={'balls': 1}
2025-10-25 20:26:45,669 : INFO : EventManager : Event: ======'sw_playfield_active'====== Args={'balls': 1}
2025-10-25 20:26:45,669 : INFO : EventManager : Event: ======'playfield_ball_count_change'====== Args={'balls': 0, 'change': -1}
2025-10-25 20:26:45,669 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_enter'====== Args={'new_balls': 1, 'unclaimed_balls': 1, 'new_available_balls': 1, 'device': <ball_device.bd_trough>}
2025-10-25 20:26:45,669 : INFO : EventManager : Event: ======'ball_drain'====== Args={'device': <ball_device.bd_trough>, 'balls': 1}
2025-10-25 20:26:45,670 : INFO : EventManager : Event: ======'ball_will_end'====== Args={}
2025-10-25 20:26:45,670 : INFO : EventManager : Event: ======'balldevice_balls_available'====== Args={}
2025-10-25 20:26:45,670 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_entered'====== Args={'new_balls': 1, 'device': <ball_device.bd_trough>}
2025-10-25 20:26:45,671 : INFO : EventManager : Event: ======'ball_ending'====== Args={}
2025-10-25 20:26:45,671 : INFO : EventManager : Event: ======'mode_base_will_stop'====== Args={}
2025-10-25 20:26:45,671 : INFO : EventManager : Event: ======'mode_base_stopping'====== Args={}
2025-10-25 20:26:45,672 : INFO : EventManager : Event: ======'stop_base_music'====== Args={'priority': 0}
2025-10-25 20:26:45,672 : INFO : Mode.base : Stopped.
2025-10-25 20:26:45,672 : INFO : EventManager : Event: ======'modes_active_modes_changed'====== Args={}
2025-10-25 20:26:45,672 : INFO : EventManager : Event: ======'mode_base_stopped'====== Args={}
2025-10-25 20:26:45,672 : INFO : EventManager : Event: ======'clear'====== Args={'key': 'base'}
2025-10-25 20:26:45,684 : INFO : EventManager : Event: ======'ball_ended'====== Args={}
2025-10-25 20:26:45,686 : INFO : EventManager : Event: ======'player_turn_will_end'====== Args={'player': <Player 3>, 'number': 3}
2025-10-25 20:26:45,690 : INFO : EventManager : Event: ======'player_turn_ending'====== Args={'player': <Player 3>, 'number': 3}
2025-10-25 20:26:45,690 : INFO : EventManager : Event: ======'player_turn_ended'====== Args={'player': <Player 3>, 'number': 3}
2025-10-25 20:26:45,691 : INFO : EventManager : Event: ======'player_turn_will_start'====== Args={'player': <Player 4>, 'number': 4}
2025-10-25 20:26:45,691 : INFO : EventManager : Event: ======'player_turn_starting'====== Args={'player': <Player 4>, 'number': 4}
2025-10-25 20:26:45,691 : INFO : EventManager : Event: ======'player_ball'====== Args={'value': 1, 'prev_value': 0, 'change': 1, 'player_num': 4}
2025-10-25 20:26:45,692 : INFO : EventManager : Event: ======'player_turn_started'====== Args={'player': <Player 4>, 'number': 4}
2025-10-25 20:26:45,692 : INFO : EventManager : Event: ======'ball_will_start'====== Args={'player': 4, 'ball': 1, 'balls_remaining': 2, 'is_extra_ball': False}
2025-10-25 20:26:45,696 : INFO : EventManager : Event: ======'ball_starting'====== Args={'player': 4, 'ball': 1, 'balls_remaining': 2, 'is_extra_ball': False}
2025-10-25 20:26:45,696 : INFO : drop_target_bank.right_bank : All targets are already up. Will not reset bank.
2025-10-25 20:26:45,696 : INFO : drop_target_bank.left_bank : All targets are already up. Will not reset bank.
2025-10-25 20:26:45,696 : INFO : EventManager : Event: ======'balls_in_play'====== Args={'balls': 1}
2025-10-25 20:26:45,696 : INFO : EventManager : Event: ======'ball_started'====== Args={'player': 4, 'ball': 1, 'balls_remaining': 2, 'is_extra_ball': False}
2025-10-25 20:26:45,698 : INFO : EventManager : Event: ======'mode_base_will_start'====== Args={'player': 4, 'ball': 1, 'balls_remaining': 2, 'is_extra_ball': False}
2025-10-25 20:26:45,698 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:26:45,700 : INFO : EventManager : Event: ======'mode_base_starting'====== Args={'player': 4, 'ball': 1, 'balls_remaining': 2, 'is_extra_ball': False}
2025-10-25 20:26:45,700 : INFO : EventManager : Event: ======'info_flip_back_now'====== Args={'priority': 0, 'delay': '2s'}
2025-10-25 20:26:45,701 : INFO : Mode.base : Started. Priority: 50
2025-10-25 20:26:45,701 : INFO : EventManager : Event: ======'modes_active_modes_changed'====== Args={}
2025-10-25 20:26:45,701 : INFO : EventManager : Event: ======'mode_base_started'====== Args={'player': 4, 'ball': 1, 'balls_remaining': 2, 'is_extra_ball': False}
2025-10-25 20:26:45,702 : INFO : EventManager : Event: ======'multi_player_ball_started'====== Args={}
2025-10-25 20:26:45,714 : INFO : EventManager : Event: ======'player_4_ball_started'====== Args={}
2025-10-25 20:26:45,714 : INFO : EventManager : Event: ======'ball_start_target'====== Args={'target': 'playfield'}
2025-10-25 20:26:45,714 : INFO : ball_device.bd_trough : Setting up player-controlled eject. Balls: 1, Target: <playfield.playfield>, player_controlled_eject_event: None
2025-10-25 20:26:45,714 : INFO : ball_device.bd_trough : Adding 1 ball(s) to the eject_queue with target <playfield.playfield>.
2025-10-25 20:26:45,716 : INFO : EventManager : Event: ======'balldevice_balls_available'====== Args={}
2025-10-25 20:26:45,716 : INFO : ball_device.bd_trough : State: waiting_for_target_ready
2025-10-25 20:26:45,717 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_eject_attempt'====== Args={'balls': 1, 'target': <playfield.playfield>, 'source': <ball_device.bd_trough>, 'mechanical_eject': False, 'num_attempts': 0}
2025-10-25 20:26:45,717 : INFO : ball_device.bd_trough : State: ejecting
2025-10-25 20:26:45,717 : INFO : ball_device.bd_trough : Ejecting ball to <playfield.playfield>
2025-10-25 20:26:45,717 : INFO : EventManager : Event: ======'balldevice_bd_trough_ejecting_ball'====== Args={'balls': 1, 'target': <playfield.playfield>, 'source': <ball_device.bd_trough>, 'mechanical_eject': False, 'num_attempts': 0}
2025-10-25 20:26:45,718 : INFO : ball_device.bd_trough : Wait for ball to leave device
2025-10-25 20:26:45,718 : INFO : coil.c_trough_eject : Pulsing Driver for 40ms (1.0 pulse_power)
2025-10-25 20:26:45,762 : INFO : SwitchController : <<<<<<< 's_trough' inactive >>>>>>>
2025-10-25 20:26:45,768 : INFO : ball_device.bd_trough : State: ball_left
2025-10-25 20:26:45,769 : INFO : ball_device.bd_trough : Ball left
2025-10-25 20:26:45,769 : INFO : ball_device.bd_trough : Wait for confirm with timeout 10.0
2025-10-25 20:26:49,938 : INFO : SwitchController : <<<<<<< 's_inlanes' active >>>>>>>
2025-10-25 20:26:49,938 : INFO : EventManager : Event: ======'s_inlanes_active'====== Args={}
2025-10-25 20:26:49,938 : INFO : EventManager : Event: ======'sw_playfield_active'====== Args={}
2025-10-25 20:26:49,938 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_inlanes'====== Args={'value': 51, 'prev_value': 50, 'change': 1}
2025-10-25 20:26:49,940 : INFO : EventManager : Event: ======'player_score'====== Args={'value': 100, 'prev_value': 0, 'change': 100, 'player_num': 4, 'source': 'base'}
2025-10-25 20:26:49,941 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:26:49,942 : INFO : EventManager : Event: ======'playfield_active'====== Args={'source': None}
2025-10-25 20:26:49,952 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:26:49,953 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:26:49,953 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:26:49,954 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:26:49,954 : INFO : ball_device.bd_trough : Got eject confirm
2025-10-25 20:26:49,954 : INFO : ball_device.bd_trough : Eject successful
2025-10-25 20:26:49,954 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_eject_success'====== Args={'balls': 1, 'target': <playfield.playfield>}
2025-10-25 20:26:49,954 : INFO : EventManager : Event: ======'balldevice_playfield_ball_enter'====== Args={'new_balls': 1, 'unclaimed_balls': 1, 'device': <playfield.playfield>}
2025-10-25 20:26:49,954 : INFO : EventManager : Event: ======'playfield_ball_count_change'====== Args={'balls': 1, 'change': 1}
2025-10-25 20:26:49,956 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_count_changed'====== Args={'balls': 0}
2025-10-25 20:26:49,956 : INFO : ball_device.bd_trough : State: idle
2025-10-25 20:26:49,957 : INFO : SwitchController : <<<<<<< 's_inlanes' inactive >>>>>>>
2025-10-25 20:26:52,584 : INFO : SwitchController : <<<<<<< 's_trough' active >>>>>>>
2025-10-25 20:26:52,584 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_trough'====== Args={'value': 208, 'prev_value': 207, 'change': 1}
2025-10-25 20:26:52,600 : INFO : SwitchController : <<<<<<< 's_trough' inactive >>>>>>>
2025-10-25 20:26:52,616 : INFO : SwitchController : <<<<<<< 's_trough' active >>>>>>>
2025-10-25 20:26:52,616 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_trough'====== Args={'value': 209, 'prev_value': 208, 'change': 1}
2025-10-25 20:26:53,116 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_count_changed'====== Args={'balls': 1}
2025-10-25 20:26:53,116 : INFO : ball_device.bd_trough : Received unexpected ball
2025-10-25 20:26:53,116 : INFO : EventManager : Event: ======'balldevice_captured_from_playfield'====== Args={'balls': 1}
2025-10-25 20:26:53,116 : INFO : EventManager : Event: ======'sw_playfield_active'====== Args={'balls': 1}
2025-10-25 20:26:53,116 : INFO : EventManager : Event: ======'playfield_ball_count_change'====== Args={'balls': 0, 'change': -1}
2025-10-25 20:26:53,117 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_enter'====== Args={'new_balls': 1, 'unclaimed_balls': 1, 'new_available_balls': 1, 'device': <ball_device.bd_trough>}
2025-10-25 20:26:53,117 : INFO : EventManager : Event: ======'ball_drain'====== Args={'device': <ball_device.bd_trough>, 'balls': 1}
2025-10-25 20:26:53,118 : INFO : EventManager : Event: ======'ball_will_end'====== Args={}
2025-10-25 20:26:53,118 : INFO : EventManager : Event: ======'balldevice_balls_available'====== Args={}
2025-10-25 20:26:53,118 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_entered'====== Args={'new_balls': 1, 'device': <ball_device.bd_trough>}
2025-10-25 20:26:53,119 : INFO : EventManager : Event: ======'ball_ending'====== Args={}
2025-10-25 20:26:53,119 : INFO : EventManager : Event: ======'mode_base_will_stop'====== Args={}
2025-10-25 20:26:53,119 : INFO : EventManager : Event: ======'mode_base_stopping'====== Args={}
2025-10-25 20:26:53,119 : INFO : EventManager : Event: ======'stop_base_music'====== Args={'priority': 0}
2025-10-25 20:26:53,120 : INFO : Mode.base : Stopped.
2025-10-25 20:26:53,120 : INFO : EventManager : Event: ======'modes_active_modes_changed'====== Args={}
2025-10-25 20:26:53,120 : INFO : EventManager : Event: ======'mode_base_stopped'====== Args={}
2025-10-25 20:26:53,120 : INFO : EventManager : Event: ======'clear'====== Args={'key': 'base'}
2025-10-25 20:26:53,133 : INFO : EventManager : Event: ======'ball_ended'====== Args={}
2025-10-25 20:26:53,134 : INFO : EventManager : Event: ======'player_turn_will_end'====== Args={'player': <Player 4>, 'number': 4}
2025-10-25 20:26:53,138 : INFO : EventManager : Event: ======'player_turn_ending'====== Args={'player': <Player 4>, 'number': 4}
2025-10-25 20:26:53,138 : INFO : EventManager : Event: ======'player_turn_ended'====== Args={'player': <Player 4>, 'number': 4}
2025-10-25 20:26:53,139 : INFO : EventManager : Event: ======'player_turn_will_start'====== Args={'player': <Player 1>, 'number': 1}
2025-10-25 20:26:53,139 : INFO : EventManager : Event: ======'player_turn_starting'====== Args={'player': <Player 1>, 'number': 1}
2025-10-25 20:26:53,139 : INFO : EventManager : Event: ======'player_ball'====== Args={'value': 2, 'prev_value': 1, 'change': 1, 'player_num': 1}
2025-10-25 20:26:53,140 : INFO : EventManager : Event: ======'player_turn_started'====== Args={'player': <Player 1>, 'number': 1}
2025-10-25 20:26:53,140 : INFO : EventManager : Event: ======'ball_will_start'====== Args={'player': 1, 'ball': 2, 'balls_remaining': 1, 'is_extra_ball': False}
2025-10-25 20:26:53,144 : INFO : EventManager : Event: ======'ball_starting'====== Args={'player': 1, 'ball': 2, 'balls_remaining': 1, 'is_extra_ball': False}
2025-10-25 20:26:53,144 : INFO : drop_target_bank.right_bank : All targets are already up. Will not reset bank.
2025-10-25 20:26:53,144 : INFO : drop_target_bank.left_bank : All targets are already up. Will not reset bank.
2025-10-25 20:26:53,144 : INFO : EventManager : Event: ======'balls_in_play'====== Args={'balls': 1}
2025-10-25 20:26:53,144 : INFO : EventManager : Event: ======'ball_started'====== Args={'player': 1, 'ball': 2, 'balls_remaining': 1, 'is_extra_ball': False}
2025-10-25 20:26:53,144 : INFO : EventManager : Event: ======'mode_base_will_start'====== Args={'player': 1, 'ball': 2, 'balls_remaining': 1, 'is_extra_ball': False}
2025-10-25 20:26:53,145 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:26:53,147 : INFO : EventManager : Event: ======'mode_base_starting'====== Args={'player': 1, 'ball': 2, 'balls_remaining': 1, 'is_extra_ball': False}
2025-10-25 20:26:53,148 : INFO : EventManager : Event: ======'info_flip_back_now'====== Args={'priority': 0, 'delay': '2s'}
2025-10-25 20:26:53,149 : INFO : Mode.base : Started. Priority: 50
2025-10-25 20:26:53,149 : INFO : EventManager : Event: ======'modes_active_modes_changed'====== Args={}
2025-10-25 20:26:53,149 : INFO : EventManager : Event: ======'mode_base_started'====== Args={'player': 1, 'ball': 2, 'balls_remaining': 1, 'is_extra_ball': False}
2025-10-25 20:26:53,149 : INFO : EventManager : Event: ======'multi_player_ball_started'====== Args={}
2025-10-25 20:26:53,161 : INFO : EventManager : Event: ======'player_1_ball_started'====== Args={}
2025-10-25 20:26:53,162 : INFO : EventManager : Event: ======'ball_start_target'====== Args={'target': 'playfield'}
2025-10-25 20:26:53,162 : INFO : ball_device.bd_trough : Setting up player-controlled eject. Balls: 1, Target: <playfield.playfield>, player_controlled_eject_event: None
2025-10-25 20:26:53,162 : INFO : ball_device.bd_trough : Adding 1 ball(s) to the eject_queue with target <playfield.playfield>.
2025-10-25 20:26:53,162 : INFO : EventManager : Event: ======'balldevice_balls_available'====== Args={}
2025-10-25 20:26:53,163 : INFO : ball_device.bd_trough : State: waiting_for_target_ready
2025-10-25 20:26:53,163 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_eject_attempt'====== Args={'balls': 1, 'target': <playfield.playfield>, 'source': <ball_device.bd_trough>, 'mechanical_eject': False, 'num_attempts': 0}
2025-10-25 20:26:53,163 : INFO : ball_device.bd_trough : State: ejecting
2025-10-25 20:26:53,163 : INFO : ball_device.bd_trough : Ejecting ball to <playfield.playfield>
2025-10-25 20:26:53,163 : INFO : EventManager : Event: ======'balldevice_bd_trough_ejecting_ball'====== Args={'balls': 1, 'target': <playfield.playfield>, 'source': <ball_device.bd_trough>, 'mechanical_eject': False, 'num_attempts': 0}
2025-10-25 20:26:53,164 : INFO : ball_device.bd_trough : Wait for ball to leave device
2025-10-25 20:26:53,164 : INFO : coil.c_trough_eject : Pulsing Driver for 40ms (1.0 pulse_power)
2025-10-25 20:26:53,210 : INFO : SwitchController : <<<<<<< 's_trough' inactive >>>>>>>
2025-10-25 20:26:53,214 : INFO : SwitchController : <<<<<<< 's_trough' active >>>>>>>
2025-10-25 20:26:53,216 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_trough'====== Args={'value': 210, 'prev_value': 209, 'change': 1}
2025-10-25 20:26:53,220 : INFO : ball_device.bd_trough : State: ball_left
2025-10-25 20:26:53,220 : INFO : ball_device.bd_trough : Ball left
2025-10-25 20:26:53,220 : INFO : ball_device.bd_trough : Wait for confirm with timeout 10.0
2025-10-25 20:26:53,221 : INFO : SwitchController : <<<<<<< 's_trough' inactive >>>>>>>
2025-10-25 20:27:03,219 : INFO : ball_device.bd_trough : State: failed_confirm
2025-10-25 20:27:03,219 : INFO : ball_device.bd_trough : Got timeout (10.0s) before confirm from <playfield.playfield>
2025-10-25 20:27:03,312 : INFO : ball_device.bd_trough : Confirming eject because target is playfield and ball did not return.
2025-10-25 20:27:03,312 : INFO : ball_device.bd_trough : Eject successful
2025-10-25 20:27:03,312 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_eject_success'====== Args={'balls': 1, 'target': <playfield.playfield>}
2025-10-25 20:27:03,312 : INFO : EventManager : Event: ======'balldevice_playfield_ball_enter'====== Args={'new_balls': 1, 'unclaimed_balls': 1, 'device': <playfield.playfield>}
2025-10-25 20:27:03,313 : INFO : EventManager : Event: ======'playfield_ball_count_change'====== Args={'balls': 1, 'change': 1}
2025-10-25 20:27:03,313 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_count_changed'====== Args={'balls': 0}
2025-10-25 20:27:03,313 : INFO : ball_device.bd_trough : State: idle
2025-10-25 20:27:14,616 : INFO : SwitchController : <<<<<<< 's_inlanes' active >>>>>>>
2025-10-25 20:27:14,616 : INFO : EventManager : Event: ======'s_inlanes_active'====== Args={}
2025-10-25 20:27:14,616 : INFO : EventManager : Event: ======'sw_playfield_active'====== Args={}
2025-10-25 20:27:14,616 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_inlanes'====== Args={'value': 52, 'prev_value': 51, 'change': 1}
2025-10-25 20:27:14,616 : INFO : EventManager : Event: ======'player_score'====== Args={'value': 200, 'prev_value': 100, 'change': 100, 'player_num': 1, 'source': 'base'}
2025-10-25 20:27:14,618 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:14,629 : INFO : SwitchController : <<<<<<< 's_inlanes' inactive >>>>>>>
2025-10-25 20:27:14,629 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:14,630 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:14,630 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:14,631 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:16,412 : INFO : SwitchController : <<<<<<< 's_trough' active >>>>>>>
2025-10-25 20:27:16,412 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_trough'====== Args={'value': 211, 'prev_value': 210, 'change': 1}
2025-10-25 20:27:16,427 : INFO : SwitchController : <<<<<<< 's_trough' inactive >>>>>>>
2025-10-25 20:27:16,474 : INFO : SwitchController : <<<<<<< 's_trough' active >>>>>>>
2025-10-25 20:27:16,474 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_trough'====== Args={'value': 212, 'prev_value': 211, 'change': 1}
2025-10-25 20:27:16,978 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_count_changed'====== Args={'balls': 1}
2025-10-25 20:27:16,978 : INFO : ball_device.bd_trough : Received unexpected ball
2025-10-25 20:27:16,978 : INFO : EventManager : Event: ======'balldevice_captured_from_playfield'====== Args={'balls': 1}
2025-10-25 20:27:16,979 : INFO : EventManager : Event: ======'sw_playfield_active'====== Args={'balls': 1}
2025-10-25 20:27:16,979 : INFO : EventManager : Event: ======'playfield_ball_count_change'====== Args={'balls': 0, 'change': -1}
2025-10-25 20:27:16,979 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_enter'====== Args={'new_balls': 1, 'unclaimed_balls': 1, 'new_available_balls': 1, 'device': <ball_device.bd_trough>}
2025-10-25 20:27:16,979 : INFO : EventManager : Event: ======'ball_drain'====== Args={'device': <ball_device.bd_trough>, 'balls': 1}
2025-10-25 20:27:16,980 : INFO : EventManager : Event: ======'ball_will_end'====== Args={}
2025-10-25 20:27:16,980 : INFO : EventManager : Event: ======'balldevice_balls_available'====== Args={}
2025-10-25 20:27:16,980 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_entered'====== Args={'new_balls': 1, 'device': <ball_device.bd_trough>}
2025-10-25 20:27:16,981 : INFO : EventManager : Event: ======'ball_ending'====== Args={}
2025-10-25 20:27:16,981 : INFO : EventManager : Event: ======'mode_base_will_stop'====== Args={}
2025-10-25 20:27:16,981 : INFO : EventManager : Event: ======'mode_base_stopping'====== Args={}
2025-10-25 20:27:16,981 : INFO : EventManager : Event: ======'stop_base_music'====== Args={'priority': 0}
2025-10-25 20:27:16,981 : INFO : Mode.base : Stopped.
2025-10-25 20:27:16,981 : INFO : EventManager : Event: ======'modes_active_modes_changed'====== Args={}
2025-10-25 20:27:16,982 : INFO : EventManager : Event: ======'mode_base_stopped'====== Args={}
2025-10-25 20:27:16,982 : INFO : EventManager : Event: ======'clear'====== Args={'key': 'base'}
2025-10-25 20:27:16,994 : INFO : EventManager : Event: ======'ball_ended'====== Args={}
2025-10-25 20:27:16,994 : INFO : EventManager : Event: ======'player_turn_will_end'====== Args={'player': <Player 1>, 'number': 1}
2025-10-25 20:27:16,999 : INFO : EventManager : Event: ======'player_turn_ending'====== Args={'player': <Player 1>, 'number': 1}
2025-10-25 20:27:16,999 : INFO : EventManager : Event: ======'player_turn_ended'====== Args={'player': <Player 1>, 'number': 1}
2025-10-25 20:27:16,999 : INFO : EventManager : Event: ======'player_turn_will_start'====== Args={'player': <Player 2>, 'number': 2}
2025-10-25 20:27:17,000 : INFO : EventManager : Event: ======'player_turn_starting'====== Args={'player': <Player 2>, 'number': 2}
2025-10-25 20:27:17,000 : INFO : EventManager : Event: ======'player_ball'====== Args={'value': 2, 'prev_value': 1, 'change': 1, 'player_num': 2}
2025-10-25 20:27:17,000 : INFO : EventManager : Event: ======'player_turn_started'====== Args={'player': <Player 2>, 'number': 2}
2025-10-25 20:27:17,001 : INFO : EventManager : Event: ======'ball_will_start'====== Args={'player': 2, 'ball': 2, 'balls_remaining': 1, 'is_extra_ball': False}
2025-10-25 20:27:17,006 : INFO : EventManager : Event: ======'ball_starting'====== Args={'player': 2, 'ball': 2, 'balls_remaining': 1, 'is_extra_ball': False}
2025-10-25 20:27:17,006 : INFO : drop_target_bank.right_bank : All targets are already up. Will not reset bank.
2025-10-25 20:27:17,006 : INFO : drop_target_bank.left_bank : All targets are already up. Will not reset bank.
2025-10-25 20:27:17,006 : INFO : EventManager : Event: ======'balls_in_play'====== Args={'balls': 1}
2025-10-25 20:27:17,006 : INFO : EventManager : Event: ======'ball_started'====== Args={'player': 2, 'ball': 2, 'balls_remaining': 1, 'is_extra_ball': False}
2025-10-25 20:27:17,007 : INFO : EventManager : Event: ======'mode_base_will_start'====== Args={'player': 2, 'ball': 2, 'balls_remaining': 1, 'is_extra_ball': False}
2025-10-25 20:27:17,007 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:17,009 : INFO : EventManager : Event: ======'mode_base_starting'====== Args={'player': 2, 'ball': 2, 'balls_remaining': 1, 'is_extra_ball': False}
2025-10-25 20:27:17,010 : INFO : EventManager : Event: ======'info_flip_back_now'====== Args={'priority': 0, 'delay': '2s'}
2025-10-25 20:27:17,010 : INFO : Mode.base : Started. Priority: 50
2025-10-25 20:27:17,010 : INFO : EventManager : Event: ======'modes_active_modes_changed'====== Args={}
2025-10-25 20:27:17,010 : INFO : EventManager : Event: ======'mode_base_started'====== Args={'player': 2, 'ball': 2, 'balls_remaining': 1, 'is_extra_ball': False}
2025-10-25 20:27:17,011 : INFO : EventManager : Event: ======'multi_player_ball_started'====== Args={}
2025-10-25 20:27:17,024 : INFO : EventManager : Event: ======'player_2_ball_started'====== Args={}
2025-10-25 20:27:17,024 : INFO : EventManager : Event: ======'ball_start_target'====== Args={'target': 'playfield'}
2025-10-25 20:27:17,025 : INFO : ball_device.bd_trough : Setting up player-controlled eject. Balls: 1, Target: <playfield.playfield>, player_controlled_eject_event: None
2025-10-25 20:27:17,025 : INFO : ball_device.bd_trough : Adding 1 ball(s) to the eject_queue with target <playfield.playfield>.
2025-10-25 20:27:17,025 : INFO : EventManager : Event: ======'balldevice_balls_available'====== Args={}
2025-10-25 20:27:17,026 : INFO : ball_device.bd_trough : State: waiting_for_target_ready
2025-10-25 20:27:17,026 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_eject_attempt'====== Args={'balls': 1, 'target': <playfield.playfield>, 'source': <ball_device.bd_trough>, 'mechanical_eject': False, 'num_attempts': 0}
2025-10-25 20:27:17,026 : INFO : ball_device.bd_trough : State: ejecting
2025-10-25 20:27:17,026 : INFO : ball_device.bd_trough : Ejecting ball to <playfield.playfield>
2025-10-25 20:27:17,026 : INFO : EventManager : Event: ======'balldevice_bd_trough_ejecting_ball'====== Args={'balls': 1, 'target': <playfield.playfield>, 'source': <ball_device.bd_trough>, 'mechanical_eject': False, 'num_attempts': 0}
2025-10-25 20:27:17,027 : INFO : ball_device.bd_trough : Wait for ball to leave device
2025-10-25 20:27:17,027 : INFO : coil.c_trough_eject : Pulsing Driver for 40ms (1.0 pulse_power)
2025-10-25 20:27:17,087 : INFO : SwitchController : <<<<<<< 's_trough' inactive >>>>>>>
2025-10-25 20:27:17,092 : INFO : SwitchController : <<<<<<< 's_trough' active >>>>>>>
2025-10-25 20:27:17,092 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_trough'====== Args={'value': 213, 'prev_value': 212, 'change': 1}
2025-10-25 20:27:17,098 : INFO : ball_device.bd_trough : State: ball_left
2025-10-25 20:27:17,098 : INFO : ball_device.bd_trough : Ball left
2025-10-25 20:27:17,098 : INFO : ball_device.bd_trough : Wait for confirm with timeout 10.0
2025-10-25 20:27:17,099 : INFO : SwitchController : <<<<<<< 's_trough' inactive >>>>>>>
2025-10-25 20:27:18,709 : INFO : SwitchController : <<<<<<< 's_inlanes' active >>>>>>>
2025-10-25 20:27:18,709 : INFO : EventManager : Event: ======'s_inlanes_active'====== Args={}
2025-10-25 20:27:18,709 : INFO : EventManager : Event: ======'sw_playfield_active'====== Args={}
2025-10-25 20:27:18,709 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_inlanes'====== Args={'value': 53, 'prev_value': 52, 'change': 1}
2025-10-25 20:27:18,710 : INFO : EventManager : Event: ======'player_score'====== Args={'value': 200, 'prev_value': 100, 'change': 100, 'player_num': 2, 'source': 'base'}
2025-10-25 20:27:18,711 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:18,711 : INFO : EventManager : Event: ======'playfield_active'====== Args={'source': None}
2025-10-25 20:27:18,721 : INFO : SwitchController : <<<<<<< 's_inlanes' inactive >>>>>>>
2025-10-25 20:27:18,728 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:18,729 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:18,729 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:18,730 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:18,730 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:18,730 : INFO : ball_device.bd_trough : Got eject confirm
2025-10-25 20:27:18,730 : INFO : ball_device.bd_trough : Eject successful
2025-10-25 20:27:18,730 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_eject_success'====== Args={'balls': 1, 'target': <playfield.playfield>}
2025-10-25 20:27:18,730 : INFO : EventManager : Event: ======'balldevice_playfield_ball_enter'====== Args={'new_balls': 1, 'unclaimed_balls': 1, 'device': <playfield.playfield>}
2025-10-25 20:27:18,730 : INFO : EventManager : Event: ======'playfield_ball_count_change'====== Args={'balls': 1, 'change': 1}
2025-10-25 20:27:18,731 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_count_changed'====== Args={'balls': 0}
2025-10-25 20:27:18,731 : INFO : ball_device.bd_trough : State: idle
2025-10-25 20:27:20,348 : INFO : SwitchController : <<<<<<< 's_trough' active >>>>>>>
2025-10-25 20:27:20,348 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_trough'====== Args={'value': 214, 'prev_value': 213, 'change': 1}
2025-10-25 20:27:20,395 : INFO : SwitchController : <<<<<<< 's_trough' inactive >>>>>>>
2025-10-25 20:27:20,401 : INFO : SwitchController : <<<<<<< 's_trough' active >>>>>>>
2025-10-25 20:27:20,401 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_trough'====== Args={'value': 215, 'prev_value': 214, 'change': 1}
2025-10-25 20:27:20,442 : INFO : SwitchController : <<<<<<< 's_trough' inactive >>>>>>>
2025-10-25 20:27:20,448 : INFO : SwitchController : <<<<<<< 's_trough' active >>>>>>>
2025-10-25 20:27:20,448 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_trough'====== Args={'value': 216, 'prev_value': 215, 'change': 1}
2025-10-25 20:27:20,958 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_count_changed'====== Args={'balls': 1}
2025-10-25 20:27:20,958 : INFO : ball_device.bd_trough : Received unexpected ball
2025-10-25 20:27:20,958 : INFO : EventManager : Event: ======'balldevice_captured_from_playfield'====== Args={'balls': 1}
2025-10-25 20:27:20,959 : INFO : EventManager : Event: ======'sw_playfield_active'====== Args={'balls': 1}
2025-10-25 20:27:20,959 : INFO : EventManager : Event: ======'playfield_ball_count_change'====== Args={'balls': 0, 'change': -1}
2025-10-25 20:27:20,959 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_enter'====== Args={'new_balls': 1, 'unclaimed_balls': 1, 'new_available_balls': 1, 'device': <ball_device.bd_trough>}
2025-10-25 20:27:20,959 : INFO : EventManager : Event: ======'ball_drain'====== Args={'device': <ball_device.bd_trough>, 'balls': 1}
2025-10-25 20:27:20,960 : INFO : EventManager : Event: ======'ball_will_end'====== Args={}
2025-10-25 20:27:20,960 : INFO : EventManager : Event: ======'balldevice_balls_available'====== Args={}
2025-10-25 20:27:20,960 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_entered'====== Args={'new_balls': 1, 'device': <ball_device.bd_trough>}
2025-10-25 20:27:20,961 : INFO : EventManager : Event: ======'ball_ending'====== Args={}
2025-10-25 20:27:20,961 : INFO : EventManager : Event: ======'mode_base_will_stop'====== Args={}
2025-10-25 20:27:20,961 : INFO : EventManager : Event: ======'mode_base_stopping'====== Args={}
2025-10-25 20:27:20,961 : INFO : EventManager : Event: ======'stop_base_music'====== Args={'priority': 0}
2025-10-25 20:27:20,962 : INFO : Mode.base : Stopped.
2025-10-25 20:27:20,962 : INFO : EventManager : Event: ======'modes_active_modes_changed'====== Args={}
2025-10-25 20:27:20,962 : INFO : EventManager : Event: ======'mode_base_stopped'====== Args={}
2025-10-25 20:27:20,962 : INFO : EventManager : Event: ======'clear'====== Args={'key': 'base'}
2025-10-25 20:27:20,975 : INFO : EventManager : Event: ======'ball_ended'====== Args={}
2025-10-25 20:27:20,976 : INFO : EventManager : Event: ======'player_turn_will_end'====== Args={'player': <Player 2>, 'number': 2}
2025-10-25 20:27:20,981 : INFO : EventManager : Event: ======'player_turn_ending'====== Args={'player': <Player 2>, 'number': 2}
2025-10-25 20:27:20,981 : INFO : EventManager : Event: ======'player_turn_ended'====== Args={'player': <Player 2>, 'number': 2}
2025-10-25 20:27:20,981 : INFO : EventManager : Event: ======'player_turn_will_start'====== Args={'player': <Player 3>, 'number': 3}
2025-10-25 20:27:20,982 : INFO : EventManager : Event: ======'player_turn_starting'====== Args={'player': <Player 3>, 'number': 3}
2025-10-25 20:27:20,982 : INFO : EventManager : Event: ======'player_ball'====== Args={'value': 2, 'prev_value': 1, 'change': 1, 'player_num': 3}
2025-10-25 20:27:20,982 : INFO : EventManager : Event: ======'player_turn_started'====== Args={'player': <Player 3>, 'number': 3}
2025-10-25 20:27:20,983 : INFO : EventManager : Event: ======'ball_will_start'====== Args={'player': 3, 'ball': 2, 'balls_remaining': 1, 'is_extra_ball': False}
2025-10-25 20:27:20,987 : INFO : EventManager : Event: ======'ball_starting'====== Args={'player': 3, 'ball': 2, 'balls_remaining': 1, 'is_extra_ball': False}
2025-10-25 20:27:20,988 : INFO : drop_target_bank.right_bank : All targets are already up. Will not reset bank.
2025-10-25 20:27:20,988 : INFO : drop_target_bank.left_bank : All targets are already up. Will not reset bank.
2025-10-25 20:27:20,988 : INFO : EventManager : Event: ======'balls_in_play'====== Args={'balls': 1}
2025-10-25 20:27:20,988 : INFO : EventManager : Event: ======'ball_started'====== Args={'player': 3, 'ball': 2, 'balls_remaining': 1, 'is_extra_ball': False}
2025-10-25 20:27:20,988 : INFO : EventManager : Event: ======'mode_base_will_start'====== Args={'player': 3, 'ball': 2, 'balls_remaining': 1, 'is_extra_ball': False}
2025-10-25 20:27:20,989 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:20,991 : INFO : EventManager : Event: ======'mode_base_starting'====== Args={'player': 3, 'ball': 2, 'balls_remaining': 1, 'is_extra_ball': False}
2025-10-25 20:27:20,992 : INFO : EventManager : Event: ======'info_flip_back_now'====== Args={'priority': 0, 'delay': '2s'}
2025-10-25 20:27:20,992 : INFO : Mode.base : Started. Priority: 50
2025-10-25 20:27:20,992 : INFO : EventManager : Event: ======'modes_active_modes_changed'====== Args={}
2025-10-25 20:27:20,992 : INFO : EventManager : Event: ======'mode_base_started'====== Args={'player': 3, 'ball': 2, 'balls_remaining': 1, 'is_extra_ball': False}
2025-10-25 20:27:20,993 : INFO : EventManager : Event: ======'multi_player_ball_started'====== Args={}
2025-10-25 20:27:21,006 : INFO : EventManager : Event: ======'player_3_ball_started'====== Args={}
2025-10-25 20:27:21,006 : INFO : EventManager : Event: ======'ball_start_target'====== Args={'target': 'playfield'}
2025-10-25 20:27:21,006 : INFO : ball_device.bd_trough : Setting up player-controlled eject. Balls: 1, Target: <playfield.playfield>, player_controlled_eject_event: None
2025-10-25 20:27:21,007 : INFO : ball_device.bd_trough : Adding 1 ball(s) to the eject_queue with target <playfield.playfield>.
2025-10-25 20:27:21,007 : INFO : EventManager : Event: ======'balldevice_balls_available'====== Args={}
2025-10-25 20:27:21,007 : INFO : ball_device.bd_trough : State: waiting_for_target_ready
2025-10-25 20:27:21,007 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_eject_attempt'====== Args={'balls': 1, 'target': <playfield.playfield>, 'source': <ball_device.bd_trough>, 'mechanical_eject': False, 'num_attempts': 0}
2025-10-25 20:27:21,008 : INFO : ball_device.bd_trough : State: ejecting
2025-10-25 20:27:21,008 : INFO : ball_device.bd_trough : Ejecting ball to <playfield.playfield>
2025-10-25 20:27:21,008 : INFO : EventManager : Event: ======'balldevice_bd_trough_ejecting_ball'====== Args={'balls': 1, 'target': <playfield.playfield>, 'source': <ball_device.bd_trough>, 'mechanical_eject': False, 'num_attempts': 0}
2025-10-25 20:27:21,009 : INFO : ball_device.bd_trough : Wait for ball to leave device
2025-10-25 20:27:21,009 : INFO : coil.c_trough_eject : Pulsing Driver for 40ms (1.0 pulse_power)
2025-10-25 20:27:21,066 : INFO : SwitchController : <<<<<<< 's_trough' inactive >>>>>>>
2025-10-25 20:27:21,072 : INFO : ball_device.bd_trough : State: ball_left
2025-10-25 20:27:21,072 : INFO : ball_device.bd_trough : Ball left
2025-10-25 20:27:21,072 : INFO : ball_device.bd_trough : Wait for confirm with timeout 10.0
2025-10-25 20:27:22,939 : INFO : SwitchController : <<<<<<< 's_inlanes' active >>>>>>>
2025-10-25 20:27:22,939 : INFO : EventManager : Event: ======'s_inlanes_active'====== Args={}
2025-10-25 20:27:22,939 : INFO : EventManager : Event: ======'sw_playfield_active'====== Args={}
2025-10-25 20:27:22,939 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_inlanes'====== Args={'value': 54, 'prev_value': 53, 'change': 1}
2025-10-25 20:27:22,940 : INFO : EventManager : Event: ======'player_score'====== Args={'value': 400, 'prev_value': 300, 'change': 100, 'player_num': 3, 'source': 'base'}
2025-10-25 20:27:22,941 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:22,941 : INFO : EventManager : Event: ======'playfield_active'====== Args={'source': None}
2025-10-25 20:27:22,951 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:22,952 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:22,953 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:22,953 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:22,954 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:22,954 : INFO : ball_device.bd_trough : Got eject confirm
2025-10-25 20:27:22,954 : INFO : ball_device.bd_trough : Eject successful
2025-10-25 20:27:22,954 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_eject_success'====== Args={'balls': 1, 'target': <playfield.playfield>}
2025-10-25 20:27:22,954 : INFO : EventManager : Event: ======'balldevice_playfield_ball_enter'====== Args={'new_balls': 1, 'unclaimed_balls': 1, 'device': <playfield.playfield>}
2025-10-25 20:27:22,954 : INFO : EventManager : Event: ======'playfield_ball_count_change'====== Args={'balls': 1, 'change': 1}
2025-10-25 20:27:22,956 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_count_changed'====== Args={'balls': 0}
2025-10-25 20:27:22,956 : INFO : ball_device.bd_trough : State: idle
2025-10-25 20:27:23,438 : INFO : SwitchController : <<<<<<< 's_inlanes' inactive >>>>>>>
2025-10-25 20:27:24,468 : INFO : SwitchController : <<<<<<< 's_trough' active >>>>>>>
2025-10-25 20:27:24,468 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_trough'====== Args={'value': 217, 'prev_value': 216, 'change': 1}
2025-10-25 20:27:24,499 : INFO : SwitchController : <<<<<<< 's_trough' inactive >>>>>>>
2025-10-25 20:27:24,515 : INFO : SwitchController : <<<<<<< 's_trough' active >>>>>>>
2025-10-25 20:27:24,515 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_trough'====== Args={'value': 218, 'prev_value': 217, 'change': 1}
2025-10-25 20:27:25,019 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_count_changed'====== Args={'balls': 1}
2025-10-25 20:27:25,019 : INFO : ball_device.bd_trough : Received unexpected ball
2025-10-25 20:27:25,019 : INFO : EventManager : Event: ======'balldevice_captured_from_playfield'====== Args={'balls': 1}
2025-10-25 20:27:25,020 : INFO : EventManager : Event: ======'sw_playfield_active'====== Args={'balls': 1}
2025-10-25 20:27:25,020 : INFO : EventManager : Event: ======'playfield_ball_count_change'====== Args={'balls': 0, 'change': -1}
2025-10-25 20:27:25,021 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_enter'====== Args={'new_balls': 1, 'unclaimed_balls': 1, 'new_available_balls': 1, 'device': <ball_device.bd_trough>}
2025-10-25 20:27:25,021 : INFO : EventManager : Event: ======'ball_drain'====== Args={'device': <ball_device.bd_trough>, 'balls': 1}
2025-10-25 20:27:25,021 : INFO : EventManager : Event: ======'ball_will_end'====== Args={}
2025-10-25 20:27:25,021 : INFO : EventManager : Event: ======'balldevice_balls_available'====== Args={}
2025-10-25 20:27:25,021 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_entered'====== Args={'new_balls': 1, 'device': <ball_device.bd_trough>}
2025-10-25 20:27:25,022 : INFO : EventManager : Event: ======'ball_ending'====== Args={}
2025-10-25 20:27:25,023 : INFO : EventManager : Event: ======'mode_base_will_stop'====== Args={}
2025-10-25 20:27:25,023 : INFO : EventManager : Event: ======'mode_base_stopping'====== Args={}
2025-10-25 20:27:25,023 : INFO : EventManager : Event: ======'stop_base_music'====== Args={'priority': 0}
2025-10-25 20:27:25,023 : INFO : Mode.base : Stopped.
2025-10-25 20:27:25,024 : INFO : EventManager : Event: ======'modes_active_modes_changed'====== Args={}
2025-10-25 20:27:25,024 : INFO : EventManager : Event: ======'mode_base_stopped'====== Args={}
2025-10-25 20:27:25,024 : INFO : EventManager : Event: ======'clear'====== Args={'key': 'base'}
2025-10-25 20:27:25,037 : INFO : EventManager : Event: ======'ball_ended'====== Args={}
2025-10-25 20:27:25,037 : INFO : EventManager : Event: ======'player_turn_will_end'====== Args={'player': <Player 3>, 'number': 3}
2025-10-25 20:27:25,041 : INFO : EventManager : Event: ======'player_turn_ending'====== Args={'player': <Player 3>, 'number': 3}
2025-10-25 20:27:25,041 : INFO : EventManager : Event: ======'player_turn_ended'====== Args={'player': <Player 3>, 'number': 3}
2025-10-25 20:27:25,042 : INFO : EventManager : Event: ======'player_turn_will_start'====== Args={'player': <Player 4>, 'number': 4}
2025-10-25 20:27:25,042 : INFO : EventManager : Event: ======'player_turn_starting'====== Args={'player': <Player 4>, 'number': 4}
2025-10-25 20:27:25,042 : INFO : EventManager : Event: ======'player_ball'====== Args={'value': 2, 'prev_value': 1, 'change': 1, 'player_num': 4}
2025-10-25 20:27:25,042 : INFO : EventManager : Event: ======'player_turn_started'====== Args={'player': <Player 4>, 'number': 4}
2025-10-25 20:27:25,043 : INFO : EventManager : Event: ======'ball_will_start'====== Args={'player': 4, 'ball': 2, 'balls_remaining': 1, 'is_extra_ball': False}
2025-10-25 20:27:25,047 : INFO : EventManager : Event: ======'ball_starting'====== Args={'player': 4, 'ball': 2, 'balls_remaining': 1, 'is_extra_ball': False}
2025-10-25 20:27:25,048 : INFO : drop_target_bank.right_bank : All targets are already up. Will not reset bank.
2025-10-25 20:27:25,048 : INFO : drop_target_bank.left_bank : All targets are already up. Will not reset bank.
2025-10-25 20:27:25,048 : INFO : EventManager : Event: ======'balls_in_play'====== Args={'balls': 1}
2025-10-25 20:27:25,048 : INFO : EventManager : Event: ======'ball_started'====== Args={'player': 4, 'ball': 2, 'balls_remaining': 1, 'is_extra_ball': False}
2025-10-25 20:27:25,049 : INFO : EventManager : Event: ======'mode_base_will_start'====== Args={'player': 4, 'ball': 2, 'balls_remaining': 1, 'is_extra_ball': False}
2025-10-25 20:27:25,049 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:25,051 : INFO : EventManager : Event: ======'mode_base_starting'====== Args={'player': 4, 'ball': 2, 'balls_remaining': 1, 'is_extra_ball': False}
2025-10-25 20:27:25,052 : INFO : EventManager : Event: ======'info_flip_back_now'====== Args={'priority': 0, 'delay': '2s'}
2025-10-25 20:27:25,052 : INFO : Mode.base : Started. Priority: 50
2025-10-25 20:27:25,052 : INFO : EventManager : Event: ======'modes_active_modes_changed'====== Args={}
2025-10-25 20:27:25,052 : INFO : EventManager : Event: ======'mode_base_started'====== Args={'player': 4, 'ball': 2, 'balls_remaining': 1, 'is_extra_ball': False}
2025-10-25 20:27:25,053 : INFO : EventManager : Event: ======'multi_player_ball_started'====== Args={}
2025-10-25 20:27:25,065 : INFO : EventManager : Event: ======'player_4_ball_started'====== Args={}
2025-10-25 20:27:25,065 : INFO : EventManager : Event: ======'ball_start_target'====== Args={'target': 'playfield'}
2025-10-25 20:27:25,065 : INFO : ball_device.bd_trough : Setting up player-controlled eject. Balls: 1, Target: <playfield.playfield>, player_controlled_eject_event: None
2025-10-25 20:27:25,065 : INFO : ball_device.bd_trough : Adding 1 ball(s) to the eject_queue with target <playfield.playfield>.
2025-10-25 20:27:25,065 : INFO : EventManager : Event: ======'balldevice_balls_available'====== Args={}
2025-10-25 20:27:25,066 : INFO : ball_device.bd_trough : State: waiting_for_target_ready
2025-10-25 20:27:25,066 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_eject_attempt'====== Args={'balls': 1, 'target': <playfield.playfield>, 'source': <ball_device.bd_trough>, 'mechanical_eject': False, 'num_attempts': 0}
2025-10-25 20:27:25,066 : INFO : ball_device.bd_trough : State: ejecting
2025-10-25 20:27:25,066 : INFO : ball_device.bd_trough : Ejecting ball to <playfield.playfield>
2025-10-25 20:27:25,066 : INFO : EventManager : Event: ======'balldevice_bd_trough_ejecting_ball'====== Args={'balls': 1, 'target': <playfield.playfield>, 'source': <ball_device.bd_trough>, 'mechanical_eject': False, 'num_attempts': 0}
2025-10-25 20:27:25,067 : INFO : ball_device.bd_trough : Wait for ball to leave device
2025-10-25 20:27:25,067 : INFO : coil.c_trough_eject : Pulsing Driver for 40ms (1.0 pulse_power)
2025-10-25 20:27:25,129 : INFO : SwitchController : <<<<<<< 's_trough' inactive >>>>>>>
2025-10-25 20:27:25,135 : INFO : ball_device.bd_trough : State: ball_left
2025-10-25 20:27:25,135 : INFO : ball_device.bd_trough : Ball left
2025-10-25 20:27:25,135 : INFO : ball_device.bd_trough : Wait for confirm with timeout 10.0
2025-10-25 20:27:26,718 : INFO : SwitchController : <<<<<<< 's_inlanes' active >>>>>>>
2025-10-25 20:27:26,718 : INFO : EventManager : Event: ======'s_inlanes_active'====== Args={}
2025-10-25 20:27:26,718 : INFO : EventManager : Event: ======'sw_playfield_active'====== Args={}
2025-10-25 20:27:26,718 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_inlanes'====== Args={'value': 55, 'prev_value': 54, 'change': 1}
2025-10-25 20:27:26,720 : INFO : EventManager : Event: ======'player_score'====== Args={'value': 200, 'prev_value': 100, 'change': 100, 'player_num': 4, 'source': 'base'}
2025-10-25 20:27:26,722 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:26,722 : INFO : EventManager : Event: ======'playfield_active'====== Args={'source': None}
2025-10-25 20:27:26,732 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:26,733 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:26,733 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:26,734 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:26,734 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:26,734 : INFO : ball_device.bd_trough : Got eject confirm
2025-10-25 20:27:26,734 : INFO : ball_device.bd_trough : Eject successful
2025-10-25 20:27:26,734 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_eject_success'====== Args={'balls': 1, 'target': <playfield.playfield>}
2025-10-25 20:27:26,734 : INFO : EventManager : Event: ======'balldevice_playfield_ball_enter'====== Args={'new_balls': 1, 'unclaimed_balls': 1, 'device': <playfield.playfield>}
2025-10-25 20:27:26,734 : INFO : EventManager : Event: ======'playfield_ball_count_change'====== Args={'balls': 1, 'change': 1}
2025-10-25 20:27:26,736 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_count_changed'====== Args={'balls': 0}
2025-10-25 20:27:26,736 : INFO : ball_device.bd_trough : State: idle
2025-10-25 20:27:27,183 : INFO : SwitchController : <<<<<<< 's_inlanes' inactive >>>>>>>
2025-10-25 20:27:27,872 : INFO : SwitchController : <<<<<<< 's_trough' active >>>>>>>
2025-10-25 20:27:27,872 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_trough'====== Args={'value': 219, 'prev_value': 218, 'change': 1}
2025-10-25 20:27:27,887 : INFO : SwitchController : <<<<<<< 's_trough' inactive >>>>>>>
2025-10-25 20:27:27,933 : INFO : SwitchController : <<<<<<< 's_trough' active >>>>>>>
2025-10-25 20:27:27,933 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_trough'====== Args={'value': 220, 'prev_value': 219, 'change': 1}
2025-10-25 20:27:28,432 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_count_changed'====== Args={'balls': 1}
2025-10-25 20:27:28,432 : INFO : ball_device.bd_trough : Received unexpected ball
2025-10-25 20:27:28,432 : INFO : EventManager : Event: ======'balldevice_captured_from_playfield'====== Args={'balls': 1}
2025-10-25 20:27:28,433 : INFO : EventManager : Event: ======'sw_playfield_active'====== Args={'balls': 1}
2025-10-25 20:27:28,433 : INFO : EventManager : Event: ======'playfield_ball_count_change'====== Args={'balls': 0, 'change': -1}
2025-10-25 20:27:28,433 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_enter'====== Args={'new_balls': 1, 'unclaimed_balls': 1, 'new_available_balls': 1, 'device': <ball_device.bd_trough>}
2025-10-25 20:27:28,433 : INFO : EventManager : Event: ======'ball_drain'====== Args={'device': <ball_device.bd_trough>, 'balls': 1}
2025-10-25 20:27:28,434 : INFO : EventManager : Event: ======'ball_will_end'====== Args={}
2025-10-25 20:27:28,434 : INFO : EventManager : Event: ======'balldevice_balls_available'====== Args={}
2025-10-25 20:27:28,434 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_entered'====== Args={'new_balls': 1, 'device': <ball_device.bd_trough>}
2025-10-25 20:27:28,434 : INFO : EventManager : Event: ======'ball_ending'====== Args={}
2025-10-25 20:27:28,436 : INFO : EventManager : Event: ======'mode_base_will_stop'====== Args={}
2025-10-25 20:27:28,436 : INFO : EventManager : Event: ======'mode_base_stopping'====== Args={}
2025-10-25 20:27:28,436 : INFO : EventManager : Event: ======'stop_base_music'====== Args={'priority': 0}
2025-10-25 20:27:28,436 : INFO : Mode.base : Stopped.
2025-10-25 20:27:28,436 : INFO : EventManager : Event: ======'modes_active_modes_changed'====== Args={}
2025-10-25 20:27:28,437 : INFO : EventManager : Event: ======'mode_base_stopped'====== Args={}
2025-10-25 20:27:28,437 : INFO : EventManager : Event: ======'clear'====== Args={'key': 'base'}
2025-10-25 20:27:28,449 : INFO : EventManager : Event: ======'ball_ended'====== Args={}
2025-10-25 20:27:28,450 : INFO : EventManager : Event: ======'player_turn_will_end'====== Args={'player': <Player 4>, 'number': 4}
2025-10-25 20:27:28,455 : INFO : EventManager : Event: ======'player_turn_ending'====== Args={'player': <Player 4>, 'number': 4}
2025-10-25 20:27:28,455 : INFO : EventManager : Event: ======'player_turn_ended'====== Args={'player': <Player 4>, 'number': 4}
2025-10-25 20:27:28,455 : INFO : EventManager : Event: ======'player_turn_will_start'====== Args={'player': <Player 1>, 'number': 1}
2025-10-25 20:27:28,455 : INFO : EventManager : Event: ======'player_turn_starting'====== Args={'player': <Player 1>, 'number': 1}
2025-10-25 20:27:28,456 : INFO : EventManager : Event: ======'player_ball'====== Args={'value': 3, 'prev_value': 2, 'change': 1, 'player_num': 1}
2025-10-25 20:27:28,456 : INFO : EventManager : Event: ======'player_turn_started'====== Args={'player': <Player 1>, 'number': 1}
2025-10-25 20:27:28,457 : INFO : EventManager : Event: ======'ball_will_start'====== Args={'player': 1, 'ball': 3, 'balls_remaining': 0, 'is_extra_ball': False}
2025-10-25 20:27:28,461 : INFO : EventManager : Event: ======'ball_starting'====== Args={'player': 1, 'ball': 3, 'balls_remaining': 0, 'is_extra_ball': False}
2025-10-25 20:27:28,462 : INFO : drop_target_bank.right_bank : All targets are already up. Will not reset bank.
2025-10-25 20:27:28,462 : INFO : drop_target_bank.left_bank : All targets are already up. Will not reset bank.
2025-10-25 20:27:28,462 : INFO : EventManager : Event: ======'balls_in_play'====== Args={'balls': 1}
2025-10-25 20:27:28,462 : INFO : EventManager : Event: ======'ball_started'====== Args={'player': 1, 'ball': 3, 'balls_remaining': 0, 'is_extra_ball': False}
2025-10-25 20:27:28,463 : INFO : EventManager : Event: ======'mode_base_will_start'====== Args={'player': 1, 'ball': 3, 'balls_remaining': 0, 'is_extra_ball': False}
2025-10-25 20:27:28,463 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:28,465 : INFO : EventManager : Event: ======'mode_base_starting'====== Args={'player': 1, 'ball': 3, 'balls_remaining': 0, 'is_extra_ball': False}
2025-10-25 20:27:28,466 : INFO : EventManager : Event: ======'info_flip_back_now'====== Args={'priority': 0, 'delay': '2s'}
2025-10-25 20:27:28,466 : INFO : Mode.base : Started. Priority: 50
2025-10-25 20:27:28,466 : INFO : EventManager : Event: ======'modes_active_modes_changed'====== Args={}
2025-10-25 20:27:28,466 : INFO : EventManager : Event: ======'mode_base_started'====== Args={'player': 1, 'ball': 3, 'balls_remaining': 0, 'is_extra_ball': False}
2025-10-25 20:27:28,466 : INFO : EventManager : Event: ======'multi_player_ball_started'====== Args={}
2025-10-25 20:27:28,480 : INFO : EventManager : Event: ======'player_1_ball_started'====== Args={}
2025-10-25 20:27:28,480 : INFO : EventManager : Event: ======'ball_start_target'====== Args={'target': 'playfield'}
2025-10-25 20:27:28,481 : INFO : ball_device.bd_trough : Setting up player-controlled eject. Balls: 1, Target: <playfield.playfield>, player_controlled_eject_event: None
2025-10-25 20:27:28,481 : INFO : ball_device.bd_trough : Adding 1 ball(s) to the eject_queue with target <playfield.playfield>.
2025-10-25 20:27:28,481 : INFO : EventManager : Event: ======'balldevice_balls_available'====== Args={}
2025-10-25 20:27:28,481 : INFO : ball_device.bd_trough : State: waiting_for_target_ready
2025-10-25 20:27:28,481 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_eject_attempt'====== Args={'balls': 1, 'target': <playfield.playfield>, 'source': <ball_device.bd_trough>, 'mechanical_eject': False, 'num_attempts': 0}
2025-10-25 20:27:28,482 : INFO : ball_device.bd_trough : State: ejecting
2025-10-25 20:27:28,482 : INFO : ball_device.bd_trough : Ejecting ball to <playfield.playfield>
2025-10-25 20:27:28,482 : INFO : EventManager : Event: ======'balldevice_bd_trough_ejecting_ball'====== Args={'balls': 1, 'target': <playfield.playfield>, 'source': <ball_device.bd_trough>, 'mechanical_eject': False, 'num_attempts': 0}
2025-10-25 20:27:28,482 : INFO : ball_device.bd_trough : Wait for ball to leave device
2025-10-25 20:27:28,482 : INFO : coil.c_trough_eject : Pulsing Driver for 40ms (1.0 pulse_power)
2025-10-25 20:27:28,527 : INFO : SwitchController : <<<<<<< 's_trough' inactive >>>>>>>
2025-10-25 20:27:28,534 : INFO : ball_device.bd_trough : State: ball_left
2025-10-25 20:27:28,534 : INFO : ball_device.bd_trough : Ball left
2025-10-25 20:27:28,534 : INFO : ball_device.bd_trough : Wait for confirm with timeout 10.0
2025-10-25 20:27:30,607 : INFO : SwitchController : <<<<<<< 's_inlanes' active >>>>>>>
2025-10-25 20:27:30,607 : INFO : EventManager : Event: ======'s_inlanes_active'====== Args={}
2025-10-25 20:27:30,607 : INFO : EventManager : Event: ======'sw_playfield_active'====== Args={}
2025-10-25 20:27:30,607 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_inlanes'====== Args={'value': 56, 'prev_value': 55, 'change': 1}
2025-10-25 20:27:30,608 : INFO : EventManager : Event: ======'player_score'====== Args={'value': 300, 'prev_value': 200, 'change': 100, 'player_num': 1, 'source': 'base'}
2025-10-25 20:27:30,609 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:30,609 : INFO : EventManager : Event: ======'playfield_active'====== Args={'source': None}
2025-10-25 20:27:30,620 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:30,620 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:30,620 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:30,621 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:30,621 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:30,622 : INFO : ball_device.bd_trough : Got eject confirm
2025-10-25 20:27:30,622 : INFO : ball_device.bd_trough : Eject successful
2025-10-25 20:27:30,622 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_eject_success'====== Args={'balls': 1, 'target': <playfield.playfield>}
2025-10-25 20:27:30,622 : INFO : EventManager : Event: ======'balldevice_playfield_ball_enter'====== Args={'new_balls': 1, 'unclaimed_balls': 1, 'device': <playfield.playfield>}
2025-10-25 20:27:30,622 : INFO : EventManager : Event: ======'playfield_ball_count_change'====== Args={'balls': 1, 'change': 1}
2025-10-25 20:27:30,623 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_count_changed'====== Args={'balls': 0}
2025-10-25 20:27:30,623 : INFO : ball_device.bd_trough : State: idle
2025-10-25 20:27:31,107 : INFO : SwitchController : <<<<<<< 's_inlanes' inactive >>>>>>>
2025-10-25 20:27:31,617 : INFO : SwitchController : <<<<<<< 's_trough' active >>>>>>>
2025-10-25 20:27:31,617 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_trough'====== Args={'value': 221, 'prev_value': 220, 'change': 1}
2025-10-25 20:27:31,632 : INFO : SwitchController : <<<<<<< 's_trough' inactive >>>>>>>
2025-10-25 20:27:31,648 : INFO : SwitchController : <<<<<<< 's_trough' active >>>>>>>
2025-10-25 20:27:31,648 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_trough'====== Args={'value': 222, 'prev_value': 221, 'change': 1}
2025-10-25 20:27:31,664 : INFO : SwitchController : <<<<<<< 's_trough' inactive >>>>>>>
2025-10-25 20:27:31,679 : INFO : SwitchController : <<<<<<< 's_trough' active >>>>>>>
2025-10-25 20:27:31,679 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_trough'====== Args={'value': 223, 'prev_value': 222, 'change': 1}
2025-10-25 20:27:31,695 : INFO : SwitchController : <<<<<<< 's_trough' inactive >>>>>>>
2025-10-25 20:27:31,772 : INFO : SwitchController : <<<<<<< 's_trough' active >>>>>>>
2025-10-25 20:27:31,772 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_trough'====== Args={'value': 224, 'prev_value': 223, 'change': 1}
2025-10-25 20:27:32,271 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_count_changed'====== Args={'balls': 1}
2025-10-25 20:27:32,271 : INFO : ball_device.bd_trough : Received unexpected ball
2025-10-25 20:27:32,271 : INFO : EventManager : Event: ======'balldevice_captured_from_playfield'====== Args={'balls': 1}
2025-10-25 20:27:32,272 : INFO : EventManager : Event: ======'sw_playfield_active'====== Args={'balls': 1}
2025-10-25 20:27:32,272 : INFO : EventManager : Event: ======'playfield_ball_count_change'====== Args={'balls': 0, 'change': -1}
2025-10-25 20:27:32,272 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_enter'====== Args={'new_balls': 1, 'unclaimed_balls': 1, 'new_available_balls': 1, 'device': <ball_device.bd_trough>}
2025-10-25 20:27:32,272 : INFO : EventManager : Event: ======'ball_drain'====== Args={'device': <ball_device.bd_trough>, 'balls': 1}
2025-10-25 20:27:32,273 : INFO : EventManager : Event: ======'ball_will_end'====== Args={}
2025-10-25 20:27:32,273 : INFO : EventManager : Event: ======'balldevice_balls_available'====== Args={}
2025-10-25 20:27:32,273 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_entered'====== Args={'new_balls': 1, 'device': <ball_device.bd_trough>}
2025-10-25 20:27:32,274 : INFO : EventManager : Event: ======'ball_ending'====== Args={}
2025-10-25 20:27:32,274 : INFO : EventManager : Event: ======'mode_base_will_stop'====== Args={}
2025-10-25 20:27:32,274 : INFO : EventManager : Event: ======'mode_base_stopping'====== Args={}
2025-10-25 20:27:32,274 : INFO : EventManager : Event: ======'stop_base_music'====== Args={'priority': 0}
2025-10-25 20:27:32,274 : INFO : Mode.base : Stopped.
2025-10-25 20:27:32,274 : INFO : EventManager : Event: ======'modes_active_modes_changed'====== Args={}
2025-10-25 20:27:32,276 : INFO : EventManager : Event: ======'mode_base_stopped'====== Args={}
2025-10-25 20:27:32,276 : INFO : EventManager : Event: ======'clear'====== Args={'key': 'base'}
2025-10-25 20:27:32,289 : INFO : EventManager : Event: ======'ball_ended'====== Args={}
2025-10-25 20:27:32,290 : INFO : EventManager : Event: ======'player_turn_will_end'====== Args={'player': <Player 1>, 'number': 1}
2025-10-25 20:27:32,294 : INFO : EventManager : Event: ======'player_turn_ending'====== Args={'player': <Player 1>, 'number': 1}
2025-10-25 20:27:32,294 : INFO : EventManager : Event: ======'player_turn_ended'====== Args={'player': <Player 1>, 'number': 1}
2025-10-25 20:27:32,294 : INFO : EventManager : Event: ======'player_turn_will_start'====== Args={'player': <Player 2>, 'number': 2}
2025-10-25 20:27:32,295 : INFO : EventManager : Event: ======'player_turn_starting'====== Args={'player': <Player 2>, 'number': 2}
2025-10-25 20:27:32,295 : INFO : EventManager : Event: ======'player_ball'====== Args={'value': 3, 'prev_value': 2, 'change': 1, 'player_num': 2}
2025-10-25 20:27:32,295 : INFO : EventManager : Event: ======'player_turn_started'====== Args={'player': <Player 2>, 'number': 2}
2025-10-25 20:27:32,296 : INFO : EventManager : Event: ======'ball_will_start'====== Args={'player': 2, 'ball': 3, 'balls_remaining': 0, 'is_extra_ball': False}
2025-10-25 20:27:32,300 : INFO : EventManager : Event: ======'ball_starting'====== Args={'player': 2, 'ball': 3, 'balls_remaining': 0, 'is_extra_ball': False}
2025-10-25 20:27:32,300 : INFO : drop_target_bank.right_bank : All targets are already up. Will not reset bank.
2025-10-25 20:27:32,300 : INFO : drop_target_bank.left_bank : All targets are already up. Will not reset bank.
2025-10-25 20:27:32,300 : INFO : EventManager : Event: ======'balls_in_play'====== Args={'balls': 1}
2025-10-25 20:27:32,301 : INFO : EventManager : Event: ======'ball_started'====== Args={'player': 2, 'ball': 3, 'balls_remaining': 0, 'is_extra_ball': False}
2025-10-25 20:27:32,301 : INFO : EventManager : Event: ======'mode_base_will_start'====== Args={'player': 2, 'ball': 3, 'balls_remaining': 0, 'is_extra_ball': False}
2025-10-25 20:27:32,301 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:32,305 : INFO : EventManager : Event: ======'mode_base_starting'====== Args={'player': 2, 'ball': 3, 'balls_remaining': 0, 'is_extra_ball': False}
2025-10-25 20:27:32,305 : INFO : EventManager : Event: ======'info_flip_back_now'====== Args={'priority': 0, 'delay': '2s'}
2025-10-25 20:27:32,306 : INFO : Mode.base : Started. Priority: 50
2025-10-25 20:27:32,306 : INFO : EventManager : Event: ======'modes_active_modes_changed'====== Args={}
2025-10-25 20:27:32,306 : INFO : EventManager : Event: ======'mode_base_started'====== Args={'player': 2, 'ball': 3, 'balls_remaining': 0, 'is_extra_ball': False}
2025-10-25 20:27:32,306 : INFO : EventManager : Event: ======'multi_player_ball_started'====== Args={}
2025-10-25 20:27:32,318 : INFO : EventManager : Event: ======'player_2_ball_started'====== Args={}
2025-10-25 20:27:32,318 : INFO : EventManager : Event: ======'ball_start_target'====== Args={'target': 'playfield'}
2025-10-25 20:27:32,319 : INFO : ball_device.bd_trough : Setting up player-controlled eject. Balls: 1, Target: <playfield.playfield>, player_controlled_eject_event: None
2025-10-25 20:27:32,319 : INFO : ball_device.bd_trough : Adding 1 ball(s) to the eject_queue with target <playfield.playfield>.
2025-10-25 20:27:32,319 : INFO : EventManager : Event: ======'balldevice_balls_available'====== Args={}
2025-10-25 20:27:32,320 : INFO : ball_device.bd_trough : State: waiting_for_target_ready
2025-10-25 20:27:32,320 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_eject_attempt'====== Args={'balls': 1, 'target': <playfield.playfield>, 'source': <ball_device.bd_trough>, 'mechanical_eject': False, 'num_attempts': 0}
2025-10-25 20:27:32,320 : INFO : ball_device.bd_trough : State: ejecting
2025-10-25 20:27:32,320 : INFO : ball_device.bd_trough : Ejecting ball to <playfield.playfield>
2025-10-25 20:27:32,320 : INFO : EventManager : Event: ======'balldevice_bd_trough_ejecting_ball'====== Args={'balls': 1, 'target': <playfield.playfield>, 'source': <ball_device.bd_trough>, 'mechanical_eject': False, 'num_attempts': 0}
2025-10-25 20:27:32,320 : INFO : ball_device.bd_trough : Wait for ball to leave device
2025-10-25 20:27:32,322 : INFO : coil.c_trough_eject : Pulsing Driver for 40ms (1.0 pulse_power)
2025-10-25 20:27:32,380 : INFO : SwitchController : <<<<<<< 's_trough' inactive >>>>>>>
2025-10-25 20:27:32,386 : INFO : ball_device.bd_trough : State: ball_left
2025-10-25 20:27:32,386 : INFO : ball_device.bd_trough : Ball left
2025-10-25 20:27:32,386 : INFO : ball_device.bd_trough : Wait for confirm with timeout 10.0
2025-10-25 20:27:33,594 : INFO : SwitchController : <<<<<<< 's_inlanes' active >>>>>>>
2025-10-25 20:27:33,594 : INFO : EventManager : Event: ======'s_inlanes_active'====== Args={}
2025-10-25 20:27:33,594 : INFO : EventManager : Event: ======'sw_playfield_active'====== Args={}
2025-10-25 20:27:33,594 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_inlanes'====== Args={'value': 57, 'prev_value': 56, 'change': 1}
2025-10-25 20:27:33,594 : INFO : EventManager : Event: ======'player_score'====== Args={'value': 300, 'prev_value': 200, 'change': 100, 'player_num': 2, 'source': 'base'}
2025-10-25 20:27:33,596 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:33,596 : INFO : EventManager : Event: ======'playfield_active'====== Args={'source': None}
2025-10-25 20:27:33,603 : INFO : SwitchController : <<<<<<< 's_inlanes' inactive >>>>>>>
2025-10-25 20:27:33,604 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:33,604 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:33,605 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:33,605 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:33,605 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:33,606 : INFO : ball_device.bd_trough : Got eject confirm
2025-10-25 20:27:33,606 : INFO : ball_device.bd_trough : Eject successful
2025-10-25 20:27:33,606 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_eject_success'====== Args={'balls': 1, 'target': <playfield.playfield>}
2025-10-25 20:27:33,611 : INFO : EventManager : Event: ======'balldevice_playfield_ball_enter'====== Args={'new_balls': 1, 'unclaimed_balls': 1, 'device': <playfield.playfield>}
2025-10-25 20:27:33,611 : INFO : EventManager : Event: ======'playfield_ball_count_change'====== Args={'balls': 1, 'change': 1}
2025-10-25 20:27:33,611 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_count_changed'====== Args={'balls': 0}
2025-10-25 20:27:33,611 : INFO : ball_device.bd_trough : State: idle
2025-10-25 20:27:33,612 : INFO : SwitchController : <<<<<<< 's_inlanes' active >>>>>>>
2025-10-25 20:27:33,612 : INFO : EventManager : Event: ======'s_inlanes_active'====== Args={}
2025-10-25 20:27:33,612 : INFO : EventManager : Event: ======'sw_playfield_active'====== Args={}
2025-10-25 20:27:33,612 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_inlanes'====== Args={'value': 58, 'prev_value': 57, 'change': 1}
2025-10-25 20:27:33,612 : INFO : EventManager : Event: ======'player_score'====== Args={'value': 400, 'prev_value': 300, 'change': 100, 'player_num': 2, 'source': 'base'}
2025-10-25 20:27:33,613 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:33,620 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:33,620 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:33,621 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:33,621 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:33,622 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:33,718 : INFO : SwitchController : <<<<<<< 's_inlanes' inactive >>>>>>>
2025-10-25 20:27:33,733 : INFO : SwitchController : <<<<<<< 's_inlanes' active >>>>>>>
2025-10-25 20:27:33,733 : INFO : EventManager : Event: ======'s_inlanes_active'====== Args={}
2025-10-25 20:27:33,733 : INFO : EventManager : Event: ======'sw_playfield_active'====== Args={}
2025-10-25 20:27:33,733 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_inlanes'====== Args={'value': 59, 'prev_value': 58, 'change': 1}
2025-10-25 20:27:33,734 : INFO : EventManager : Event: ======'player_score'====== Args={'value': 500, 'prev_value': 400, 'change': 100, 'player_num': 2, 'source': 'base'}
2025-10-25 20:27:33,734 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:33,742 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:33,742 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:33,743 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:33,743 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:33,744 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:34,122 : INFO : SwitchController : <<<<<<< 's_inlanes' inactive >>>>>>>
2025-10-25 20:27:34,791 : INFO : SwitchController : <<<<<<< 's_trough' active >>>>>>>
2025-10-25 20:27:34,791 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_trough'====== Args={'value': 225, 'prev_value': 224, 'change': 1}
2025-10-25 20:27:34,807 : INFO : SwitchController : <<<<<<< 's_trough' inactive >>>>>>>
2025-10-25 20:27:34,853 : INFO : SwitchController : <<<<<<< 's_trough' active >>>>>>>
2025-10-25 20:27:34,853 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_trough'====== Args={'value': 226, 'prev_value': 225, 'change': 1}
2025-10-25 20:27:35,351 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_count_changed'====== Args={'balls': 1}
2025-10-25 20:27:35,352 : INFO : ball_device.bd_trough : Received unexpected ball
2025-10-25 20:27:35,352 : INFO : EventManager : Event: ======'balldevice_captured_from_playfield'====== Args={'balls': 1}
2025-10-25 20:27:35,352 : INFO : EventManager : Event: ======'sw_playfield_active'====== Args={'balls': 1}
2025-10-25 20:27:35,352 : INFO : EventManager : Event: ======'playfield_ball_count_change'====== Args={'balls': 0, 'change': -1}
2025-10-25 20:27:35,352 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_enter'====== Args={'new_balls': 1, 'unclaimed_balls': 1, 'new_available_balls': 1, 'device': <ball_device.bd_trough>}
2025-10-25 20:27:35,353 : INFO : EventManager : Event: ======'ball_drain'====== Args={'device': <ball_device.bd_trough>, 'balls': 1}
2025-10-25 20:27:35,353 : INFO : EventManager : Event: ======'ball_will_end'====== Args={}
2025-10-25 20:27:35,353 : INFO : EventManager : Event: ======'balldevice_balls_available'====== Args={}
2025-10-25 20:27:35,353 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_entered'====== Args={'new_balls': 1, 'device': <ball_device.bd_trough>}
2025-10-25 20:27:35,354 : INFO : EventManager : Event: ======'ball_ending'====== Args={}
2025-10-25 20:27:35,354 : INFO : EventManager : Event: ======'mode_base_will_stop'====== Args={}
2025-10-25 20:27:35,354 : INFO : EventManager : Event: ======'mode_base_stopping'====== Args={}
2025-10-25 20:27:35,354 : INFO : EventManager : Event: ======'stop_base_music'====== Args={'priority': 0}
2025-10-25 20:27:35,354 : INFO : Mode.base : Stopped.
2025-10-25 20:27:35,356 : INFO : EventManager : Event: ======'modes_active_modes_changed'====== Args={}
2025-10-25 20:27:35,356 : INFO : EventManager : Event: ======'mode_base_stopped'====== Args={}
2025-10-25 20:27:35,356 : INFO : EventManager : Event: ======'clear'====== Args={'key': 'base'}
2025-10-25 20:27:35,368 : INFO : EventManager : Event: ======'ball_ended'====== Args={}
2025-10-25 20:27:35,369 : INFO : EventManager : Event: ======'player_turn_will_end'====== Args={'player': <Player 2>, 'number': 2}
2025-10-25 20:27:35,373 : INFO : EventManager : Event: ======'player_turn_ending'====== Args={'player': <Player 2>, 'number': 2}
2025-10-25 20:27:35,373 : INFO : EventManager : Event: ======'player_turn_ended'====== Args={'player': <Player 2>, 'number': 2}
2025-10-25 20:27:35,374 : INFO : EventManager : Event: ======'player_turn_will_start'====== Args={'player': <Player 3>, 'number': 3}
2025-10-25 20:27:35,374 : INFO : EventManager : Event: ======'player_turn_starting'====== Args={'player': <Player 3>, 'number': 3}
2025-10-25 20:27:35,374 : INFO : EventManager : Event: ======'player_ball'====== Args={'value': 3, 'prev_value': 2, 'change': 1, 'player_num': 3}
2025-10-25 20:27:35,374 : INFO : EventManager : Event: ======'player_turn_started'====== Args={'player': <Player 3>, 'number': 3}
2025-10-25 20:27:35,375 : INFO : EventManager : Event: ======'ball_will_start'====== Args={'player': 3, 'ball': 3, 'balls_remaining': 0, 'is_extra_ball': False}
2025-10-25 20:27:35,379 : INFO : EventManager : Event: ======'ball_starting'====== Args={'player': 3, 'ball': 3, 'balls_remaining': 0, 'is_extra_ball': False}
2025-10-25 20:27:35,379 : INFO : drop_target_bank.right_bank : All targets are already up. Will not reset bank.
2025-10-25 20:27:35,380 : INFO : drop_target_bank.left_bank : All targets are already up. Will not reset bank.
2025-10-25 20:27:35,380 : INFO : EventManager : Event: ======'balls_in_play'====== Args={'balls': 1}
2025-10-25 20:27:35,380 : INFO : EventManager : Event: ======'ball_started'====== Args={'player': 3, 'ball': 3, 'balls_remaining': 0, 'is_extra_ball': False}
2025-10-25 20:27:35,380 : INFO : EventManager : Event: ======'mode_base_will_start'====== Args={'player': 3, 'ball': 3, 'balls_remaining': 0, 'is_extra_ball': False}
2025-10-25 20:27:35,381 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:35,383 : INFO : EventManager : Event: ======'mode_base_starting'====== Args={'player': 3, 'ball': 3, 'balls_remaining': 0, 'is_extra_ball': False}
2025-10-25 20:27:35,385 : INFO : EventManager : Event: ======'info_flip_back_now'====== Args={'priority': 0, 'delay': '2s'}
2025-10-25 20:27:35,385 : INFO : Mode.base : Started. Priority: 50
2025-10-25 20:27:35,385 : INFO : EventManager : Event: ======'modes_active_modes_changed'====== Args={}
2025-10-25 20:27:35,385 : INFO : EventManager : Event: ======'mode_base_started'====== Args={'player': 3, 'ball': 3, 'balls_remaining': 0, 'is_extra_ball': False}
2025-10-25 20:27:35,386 : INFO : EventManager : Event: ======'multi_player_ball_started'====== Args={}
2025-10-25 20:27:35,398 : INFO : EventManager : Event: ======'player_3_ball_started'====== Args={}
2025-10-25 20:27:35,398 : INFO : EventManager : Event: ======'ball_start_target'====== Args={'target': 'playfield'}
2025-10-25 20:27:35,399 : INFO : ball_device.bd_trough : Setting up player-controlled eject. Balls: 1, Target: <playfield.playfield>, player_controlled_eject_event: None
2025-10-25 20:27:35,399 : INFO : ball_device.bd_trough : Adding 1 ball(s) to the eject_queue with target <playfield.playfield>.
2025-10-25 20:27:35,399 : INFO : EventManager : Event: ======'balldevice_balls_available'====== Args={}
2025-10-25 20:27:35,400 : INFO : ball_device.bd_trough : State: waiting_for_target_ready
2025-10-25 20:27:35,400 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_eject_attempt'====== Args={'balls': 1, 'target': <playfield.playfield>, 'source': <ball_device.bd_trough>, 'mechanical_eject': False, 'num_attempts': 0}
2025-10-25 20:27:35,400 : INFO : ball_device.bd_trough : State: ejecting
2025-10-25 20:27:35,400 : INFO : ball_device.bd_trough : Ejecting ball to <playfield.playfield>
2025-10-25 20:27:35,400 : INFO : EventManager : Event: ======'balldevice_bd_trough_ejecting_ball'====== Args={'balls': 1, 'target': <playfield.playfield>, 'source': <ball_device.bd_trough>, 'mechanical_eject': False, 'num_attempts': 0}
2025-10-25 20:27:35,401 : INFO : ball_device.bd_trough : Wait for ball to leave device
2025-10-25 20:27:35,401 : INFO : coil.c_trough_eject : Pulsing Driver for 40ms (1.0 pulse_power)
2025-10-25 20:27:35,459 : INFO : SwitchController : <<<<<<< 's_trough' inactive >>>>>>>
2025-10-25 20:27:35,464 : INFO : ball_device.bd_trough : State: ball_left
2025-10-25 20:27:35,464 : INFO : ball_device.bd_trough : Ball left
2025-10-25 20:27:35,464 : INFO : ball_device.bd_trough : Wait for confirm with timeout 10.0
2025-10-25 20:27:37,068 : INFO : SwitchController : <<<<<<< 's_inlanes' active >>>>>>>
2025-10-25 20:27:37,068 : INFO : EventManager : Event: ======'s_inlanes_active'====== Args={}
2025-10-25 20:27:37,068 : INFO : EventManager : Event: ======'sw_playfield_active'====== Args={}
2025-10-25 20:27:37,068 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_inlanes'====== Args={'value': 60, 'prev_value': 59, 'change': 1}
2025-10-25 20:27:37,068 : INFO : EventManager : Event: ======'player_score'====== Args={'value': 500, 'prev_value': 400, 'change': 100, 'player_num': 3, 'source': 'base'}
2025-10-25 20:27:37,069 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:37,070 : INFO : EventManager : Event: ======'playfield_active'====== Args={'source': None}
2025-10-25 20:27:37,082 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:37,083 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:37,083 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:37,084 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:37,084 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:37,084 : INFO : ball_device.bd_trough : Got eject confirm
2025-10-25 20:27:37,084 : INFO : ball_device.bd_trough : Eject successful
2025-10-25 20:27:37,084 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_eject_success'====== Args={'balls': 1, 'target': <playfield.playfield>}
2025-10-25 20:27:37,084 : INFO : EventManager : Event: ======'balldevice_playfield_ball_enter'====== Args={'new_balls': 1, 'unclaimed_balls': 1, 'device': <playfield.playfield>}
2025-10-25 20:27:37,084 : INFO : EventManager : Event: ======'playfield_ball_count_change'====== Args={'balls': 1, 'change': 1}
2025-10-25 20:27:37,086 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_count_changed'====== Args={'balls': 0}
2025-10-25 20:27:37,086 : INFO : ball_device.bd_trough : State: idle
2025-10-25 20:27:37,562 : INFO : SwitchController : <<<<<<< 's_inlanes' inactive >>>>>>>
2025-10-25 20:27:38,158 : INFO : SwitchController : <<<<<<< 's_trough' active >>>>>>>
2025-10-25 20:27:38,158 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_trough'====== Args={'value': 227, 'prev_value': 226, 'change': 1}
2025-10-25 20:27:38,167 : INFO : SwitchController : <<<<<<< 's_trough' inactive >>>>>>>
2025-10-25 20:27:38,220 : INFO : SwitchController : <<<<<<< 's_trough' active >>>>>>>
2025-10-25 20:27:38,220 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_trough'====== Args={'value': 228, 'prev_value': 227, 'change': 1}
2025-10-25 20:27:38,723 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_count_changed'====== Args={'balls': 1}
2025-10-25 20:27:38,723 : INFO : ball_device.bd_trough : Received unexpected ball
2025-10-25 20:27:38,723 : INFO : EventManager : Event: ======'balldevice_captured_from_playfield'====== Args={'balls': 1}
2025-10-25 20:27:38,724 : INFO : EventManager : Event: ======'sw_playfield_active'====== Args={'balls': 1}
2025-10-25 20:27:38,724 : INFO : EventManager : Event: ======'playfield_ball_count_change'====== Args={'balls': 0, 'change': -1}
2025-10-25 20:27:38,724 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_enter'====== Args={'new_balls': 1, 'unclaimed_balls': 1, 'new_available_balls': 1, 'device': <ball_device.bd_trough>}
2025-10-25 20:27:38,724 : INFO : EventManager : Event: ======'ball_drain'====== Args={'device': <ball_device.bd_trough>, 'balls': 1}
2025-10-25 20:27:38,724 : INFO : EventManager : Event: ======'ball_will_end'====== Args={}
2025-10-25 20:27:38,726 : INFO : EventManager : Event: ======'balldevice_balls_available'====== Args={}
2025-10-25 20:27:38,726 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_entered'====== Args={'new_balls': 1, 'device': <ball_device.bd_trough>}
2025-10-25 20:27:38,727 : INFO : EventManager : Event: ======'ball_ending'====== Args={}
2025-10-25 20:27:38,727 : INFO : EventManager : Event: ======'mode_base_will_stop'====== Args={}
2025-10-25 20:27:38,727 : INFO : EventManager : Event: ======'mode_base_stopping'====== Args={}
2025-10-25 20:27:38,728 : INFO : EventManager : Event: ======'stop_base_music'====== Args={'priority': 0}
2025-10-25 20:27:38,728 : INFO : Mode.base : Stopped.
2025-10-25 20:27:38,728 : INFO : EventManager : Event: ======'modes_active_modes_changed'====== Args={}
2025-10-25 20:27:38,728 : INFO : EventManager : Event: ======'mode_base_stopped'====== Args={}
2025-10-25 20:27:38,728 : INFO : EventManager : Event: ======'clear'====== Args={'key': 'base'}
2025-10-25 20:27:38,741 : INFO : EventManager : Event: ======'ball_ended'====== Args={}
2025-10-25 20:27:38,741 : INFO : EventManager : Event: ======'player_turn_will_end'====== Args={'player': <Player 3>, 'number': 3}
2025-10-25 20:27:38,744 : INFO : EventManager : Event: ======'player_turn_ending'====== Args={'player': <Player 3>, 'number': 3}
2025-10-25 20:27:38,745 : INFO : EventManager : Event: ======'player_turn_ended'====== Args={'player': <Player 3>, 'number': 3}
2025-10-25 20:27:38,745 : INFO : EventManager : Event: ======'player_turn_will_start'====== Args={'player': <Player 4>, 'number': 4}
2025-10-25 20:27:38,746 : INFO : EventManager : Event: ======'player_turn_starting'====== Args={'player': <Player 4>, 'number': 4}
2025-10-25 20:27:38,746 : INFO : EventManager : Event: ======'player_ball'====== Args={'value': 3, 'prev_value': 2, 'change': 1, 'player_num': 4}
2025-10-25 20:27:38,746 : INFO : EventManager : Event: ======'player_turn_started'====== Args={'player': <Player 4>, 'number': 4}
2025-10-25 20:27:38,747 : INFO : EventManager : Event: ======'ball_will_start'====== Args={'player': 4, 'ball': 3, 'balls_remaining': 0, 'is_extra_ball': False}
2025-10-25 20:27:38,752 : INFO : EventManager : Event: ======'ball_starting'====== Args={'player': 4, 'ball': 3, 'balls_remaining': 0, 'is_extra_ball': False}
2025-10-25 20:27:38,753 : INFO : drop_target_bank.right_bank : All targets are already up. Will not reset bank.
2025-10-25 20:27:38,753 : INFO : drop_target_bank.left_bank : All targets are already up. Will not reset bank.
2025-10-25 20:27:38,753 : INFO : EventManager : Event: ======'balls_in_play'====== Args={'balls': 1}
2025-10-25 20:27:38,754 : INFO : EventManager : Event: ======'ball_started'====== Args={'player': 4, 'ball': 3, 'balls_remaining': 0, 'is_extra_ball': False}
2025-10-25 20:27:38,754 : INFO : EventManager : Event: ======'mode_base_will_start'====== Args={'player': 4, 'ball': 3, 'balls_remaining': 0, 'is_extra_ball': False}
2025-10-25 20:27:38,754 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:38,756 : INFO : EventManager : Event: ======'mode_base_starting'====== Args={'player': 4, 'ball': 3, 'balls_remaining': 0, 'is_extra_ball': False}
2025-10-25 20:27:38,757 : INFO : EventManager : Event: ======'info_flip_back_now'====== Args={'priority': 0, 'delay': '2s'}
2025-10-25 20:27:38,758 : INFO : Mode.base : Started. Priority: 50
2025-10-25 20:27:38,758 : INFO : EventManager : Event: ======'modes_active_modes_changed'====== Args={}
2025-10-25 20:27:38,758 : INFO : EventManager : Event: ======'mode_base_started'====== Args={'player': 4, 'ball': 3, 'balls_remaining': 0, 'is_extra_ball': False}
2025-10-25 20:27:38,758 : INFO : EventManager : Event: ======'multi_player_ball_started'====== Args={}
2025-10-25 20:27:38,770 : INFO : EventManager : Event: ======'player_4_ball_started'====== Args={}
2025-10-25 20:27:38,770 : INFO : EventManager : Event: ======'ball_start_target'====== Args={'target': 'playfield'}
2025-10-25 20:27:38,770 : INFO : ball_device.bd_trough : Setting up player-controlled eject. Balls: 1, Target: <playfield.playfield>, player_controlled_eject_event: None
2025-10-25 20:27:38,770 : INFO : ball_device.bd_trough : Adding 1 ball(s) to the eject_queue with target <playfield.playfield>.
2025-10-25 20:27:38,770 : INFO : EventManager : Event: ======'balldevice_balls_available'====== Args={}
2025-10-25 20:27:38,771 : INFO : ball_device.bd_trough : State: waiting_for_target_ready
2025-10-25 20:27:38,771 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_eject_attempt'====== Args={'balls': 1, 'target': <playfield.playfield>, 'source': <ball_device.bd_trough>, 'mechanical_eject': False, 'num_attempts': 0}
2025-10-25 20:27:38,772 : INFO : ball_device.bd_trough : State: ejecting
2025-10-25 20:27:38,772 : INFO : ball_device.bd_trough : Ejecting ball to <playfield.playfield>
2025-10-25 20:27:38,772 : INFO : EventManager : Event: ======'balldevice_bd_trough_ejecting_ball'====== Args={'balls': 1, 'target': <playfield.playfield>, 'source': <ball_device.bd_trough>, 'mechanical_eject': False, 'num_attempts': 0}
2025-10-25 20:27:38,772 : INFO : ball_device.bd_trough : Wait for ball to leave device
2025-10-25 20:27:38,772 : INFO : coil.c_trough_eject : Pulsing Driver for 40ms (1.0 pulse_power)
2025-10-25 20:27:38,818 : INFO : SwitchController : <<<<<<< 's_trough' inactive >>>>>>>
2025-10-25 20:27:38,824 : INFO : SwitchController : <<<<<<< 's_trough' active >>>>>>>
2025-10-25 20:27:38,824 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_trough'====== Args={'value': 229, 'prev_value': 228, 'change': 1}
2025-10-25 20:27:38,829 : INFO : ball_device.bd_trough : State: ball_left
2025-10-25 20:27:38,829 : INFO : ball_device.bd_trough : Ball left
2025-10-25 20:27:38,829 : INFO : ball_device.bd_trough : Wait for confirm with timeout 10.0
2025-10-25 20:27:38,829 : INFO : SwitchController : <<<<<<< 's_trough' inactive >>>>>>>
2025-10-25 20:27:40,157 : INFO : SwitchController : <<<<<<< 's_inlanes' active >>>>>>>
2025-10-25 20:27:40,157 : INFO : EventManager : Event: ======'s_inlanes_active'====== Args={}
2025-10-25 20:27:40,157 : INFO : EventManager : Event: ======'sw_playfield_active'====== Args={}
2025-10-25 20:27:40,157 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_inlanes'====== Args={'value': 61, 'prev_value': 60, 'change': 1}
2025-10-25 20:27:40,158 : INFO : EventManager : Event: ======'player_score'====== Args={'value': 300, 'prev_value': 200, 'change': 100, 'player_num': 4, 'source': 'base'}
2025-10-25 20:27:40,158 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:40,159 : INFO : EventManager : Event: ======'playfield_active'====== Args={'source': None}
2025-10-25 20:27:40,164 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:40,164 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:40,164 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:40,166 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:40,166 : INFO : EventManager : Unordered handler for class <Auditor> on event game_ended with priority 1. Handlers: [RegisteredHandler(callback=<bound method Auditor.disable of <Auditor>>, priority=1, kwargs={}, key=UUID('4b836c22-691a-4e34-b80f-3c6591ae5c54'), condition=None, blocking_facility=None), RegisteredHandler(callback=<bound method Auditor._save_audits of <Auditor>>, priority=1, kwargs={}, key=UUID('0a19ed23-bbc0-4aa0-8dde-00b41c0ed62b'), condition=None, blocking_facility=None)]. The order of those handlers is not defined and they will be executed in random order. This might lead to race conditions and potential bugs.
2025-10-25 20:27:40,167 : INFO : ball_device.bd_trough : Got eject confirm
2025-10-25 20:27:40,167 : INFO : ball_device.bd_trough : Eject successful
2025-10-25 20:27:40,167 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_eject_success'====== Args={'balls': 1, 'target': <playfield.playfield>}
2025-10-25 20:27:40,167 : INFO : EventManager : Event: ======'balldevice_playfield_ball_enter'====== Args={'new_balls': 1, 'unclaimed_balls': 1, 'device': <playfield.playfield>}
2025-10-25 20:27:40,167 : INFO : EventManager : Event: ======'playfield_ball_count_change'====== Args={'balls': 1, 'change': 1}
2025-10-25 20:27:40,167 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_count_changed'====== Args={'balls': 0}
2025-10-25 20:27:40,167 : INFO : ball_device.bd_trough : State: idle
2025-10-25 20:27:40,578 : INFO : SwitchController : <<<<<<< 's_inlanes' inactive >>>>>>>
2025-10-25 20:27:41,187 : INFO : SwitchController : <<<<<<< 's_trough' active >>>>>>>
2025-10-25 20:27:41,187 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_trough'====== Args={'value': 230, 'prev_value': 229, 'change': 1}
2025-10-25 20:27:41,194 : INFO : SwitchController : <<<<<<< 's_trough' inactive >>>>>>>
2025-10-25 20:27:41,249 : INFO : SwitchController : <<<<<<< 's_trough' active >>>>>>>
2025-10-25 20:27:41,249 : INFO : EventManager : Event: ======'machine_var_audits_switches_s_trough'====== Args={'value': 231, 'prev_value': 230, 'change': 1}
2025-10-25 20:27:41,749 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_count_changed'====== Args={'balls': 1}
2025-10-25 20:27:41,749 : INFO : ball_device.bd_trough : Received unexpected ball
2025-10-25 20:27:41,749 : INFO : EventManager : Event: ======'balldevice_captured_from_playfield'====== Args={'balls': 1}
2025-10-25 20:27:41,750 : INFO : EventManager : Event: ======'sw_playfield_active'====== Args={'balls': 1}
2025-10-25 20:27:41,750 : INFO : EventManager : Event: ======'playfield_ball_count_change'====== Args={'balls': 0, 'change': -1}
2025-10-25 20:27:41,751 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_enter'====== Args={'new_balls': 1, 'unclaimed_balls': 1, 'new_available_balls': 1, 'device': <ball_device.bd_trough>}
2025-10-25 20:27:41,751 : INFO : EventManager : Event: ======'ball_drain'====== Args={'device': <ball_device.bd_trough>, 'balls': 1}
2025-10-25 20:27:41,751 : INFO : EventManager : Event: ======'ball_will_end'====== Args={}
2025-10-25 20:27:41,752 : INFO : EventManager : Event: ======'balldevice_balls_available'====== Args={}
2025-10-25 20:27:41,752 : INFO : EventManager : Event: ======'balldevice_bd_trough_ball_entered'====== Args={'new_balls': 1, 'device': <ball_device.bd_trough>}
2025-10-25 20:27:41,753 : INFO : EventManager : Event: ======'ball_ending'====== Args={}
2025-10-25 20:27:41,753 : INFO : EventManager : Event: ======'mode_base_will_stop'====== Args={}
2025-10-25 20:27:41,753 : INFO : EventManager : Event: ======'mode_base_stopping'====== Args={}
2025-10-25 20:27:41,753 : INFO : EventManager : Event: ======'stop_base_music'====== Args={'priority': 0}
2025-10-25 20:27:41,754 : INFO : Mode.base : Stopped.
2025-10-25 20:27:41,754 : INFO : EventManager : Event: ======'modes_active_modes_changed'====== Args={}
2025-10-25 20:27:41,754 : INFO : EventManager : Event: ======'mode_base_stopped'====== Args={}
2025-10-25 20:27:41,754 : INFO : EventManager : Event: ======'clear'====== Args={'key': 'base'}
2025-10-25 20:27:41,768 : INFO : EventManager : Event: ======'ball_ended'====== Args={}
2025-10-25 20:27:41,769 : INFO : EventManager : Event: ======'player_turn_will_end'====== Args={'player': <Player 4>, 'number': 4}
2025-10-25 20:27:41,772 : INFO : EventManager : Event: ======'player_turn_ending'====== Args={'player': <Player 4>, 'number': 4}
2025-10-25 20:27:41,772 : INFO : EventManager : Event: ======'player_turn_ended'====== Args={'player': <Player 4>, 'number': 4}
2025-10-25 20:27:41,772 : INFO : EventManager : Event: ======'game_will_end'====== Args={}
2025-10-25 20:27:41,773 : INFO : EventManager : Event: ======'game_ending'====== Args={}
2025-10-25 20:27:41,773 : INFO : EventManager : Event: ======'machine_var_player2_score'====== Args={'value': 500, 'prev_value': 5110, 'change': -4610}
2025-10-25 20:27:41,774 : INFO : EventManager : Event: ======'machine_var_player3_score'====== Args={'value': 500, 'prev_value': None, 'change': True}
2025-10-25 20:27:41,774 : INFO : EventManager : Event: ======'machine_var_player4_score'====== Args={'value': 300, 'prev_value': None, 'change': True}
2025-10-25 20:27:41,774 : INFO : EventManager : Event: ======'game_ended'====== Args={}
2025-10-25 20:27:41,775 : INFO : EventManager : Event: ======'mode_game_will_stop'====== Args={}
2025-10-25 20:27:41,775 : INFO : EventManager : Event: ======'mode_game_stopping'====== Args={}
2025-10-25 20:27:41,787 : INFO : Mode.game : Stopped.
2025-10-25 20:27:41,787 : INFO : EventManager : Event: ======'modes_active_modes_changed'====== Args={}
2025-10-25 20:27:41,787 : INFO : EventManager : Event: ======'mode_game_stopped'====== Args={}
2025-10-25 20:27:41,787 : INFO : EventManager : Event: ======'clear'====== Args={'key': 'game'}
2025-10-25 20:27:45,241 : INFO : SwitchController : <<<<<<< 's_start_button' active >>>>>>>
2025-10-25 20:27:45,476 : INFO : SwitchController : <<<<<<< 's_start_button' inactive >>>>>>>
2025-10-25 20:27:46,537 : INFO : SwitchController : <<<<<<< 's_start_button' active >>>>>>>
2025-10-25 20:27:46,927 : INFO : SwitchController : <<<<<<< 's_start_button' inactive >>>>>>>
2025-10-25 20:28:01,210 : INFO : Machine : Shutting down...
2025-10-25 20:28:01,210 : INFO : EventManager : Event: ======'shutdown'====== Args={}
2025-10-25 20:28:01,306 : INFO : root : MPF run loop ended.
